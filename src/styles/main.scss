// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import '../../node_modules/bootstrap/scss/functions';

// 2. Include any default variable overrides here

// 3. Include remainder of required Bootstrap stylesheets
@import '../../node_modules/bootstrap/scss/variables';
@import '../../node_modules/bootstrap/scss/mixins';
@import '../../node_modules/bootstrap/scss/root';

// 4. Include any optional Bootstrap CSS as needed
@import '../../node_modules/bootstrap/scss/utilities';
@import '../../node_modules/bootstrap/scss/reboot';
@import '../../node_modules/bootstrap/scss/type';
@import '../../node_modules/bootstrap/scss/images';
@import '../../node_modules/bootstrap/scss/containers';
@import '../../node_modules/bootstrap/scss/grid';
@import '../../node_modules/bootstrap/scss/helpers';

// 5. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import '../../node_modules/bootstrap/scss/utilities/api';

// 6. Add additional custom code here

:root {
  --font-sans: 'Source Sans 3', -apple-system, BlinkMacSystemFont, sans-serif;
  --font-mono: 'Source Code Pro', monospace;
  --bg-light-gray: #f4f4f4;
  --border-color: #dddddd;
}

/* default elements */

body {
  font-family: var(--font-sans);
}

code:not([class*='language-']) {
  font-family: var(--font-mono);
  font-size: 0.875em;
  background: var(--bg-light-gray);
  padding: 0.2em 0.5em;
  border-radius: 0.3em;
  color: #555;
}

.front-content h3 {
  // margin-top: 4rem;
}

.front-content img {
  width: 100%;
}

a.direct-link {
  text-decoration: none;
  color: #ddd;
}

/* markdown content */

.markdown-content {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 1.5em;
    font-weight: 700;
    border-bottom: 1px solid #f0f0f0;
  }

  img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
  }
}

/* utility classes */

.hero {
  background-color: var(--bg-light-gray);
  border-bottom: 1px solid var(--border-color);
}

.repo {
  background-color: var(--bg-light-gray);
  border: 1px solid var(--border-color);
  border-radius: 0.3em;
  padding: 0;
  display: flex;
  align-items: center;
  flex-direction: row;
}

.repo .repo-install {
  background-color: var(--bg-light-gray);
  padding: 0.25em 0.8em;
  border-right: 1px solid var(--border-color);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.repo .repo-copy {
  color: grey;
  cursor: pointer;
  height: 100%;
  border: 0;
  padding-left: 0.5em;
  padding-right: 0.5em;
}

.repo .repo-copy:hover {
  background-color: #e9e9e9;
}

.repo .repo-copy:active {
  background-color: var(--border-color);
}

/* Hide in small devices */
@media (max-width: 767.98px) {
  .repo {
    display: none;
  }
}

.footer {
  border-top: 1px solid var(--border-color);
  text-align: center;
  margin-top: 3rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
}

/* bootstrap styles */

.navbar-light .navbar-toggler {
  color: rgba(0, 0, 0, 0.4);
}

.navbar-toggler:focus {
  box-shadow: none;
  color: black;
}

.btn-rounded {
  border-radius: 5em;
  padding-left: 1.3em;
  padding-right: 1.3em;
}

.popover .popover-body {
  padding: 0.4rem 0.8rem;
  color: grey;
  font-size: 0.9em;
}

/* prismjs styles */

pre[class*='language-'] {
  background: var(--bg-light-gray);
  padding: 1rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 0.875em;
}

code[class*='language-'] {
  font-family: var(--font-mono);
  line-height: 0;
  text-shadow: none;
}

/* doc layout */

$doc-sidebar-width: 250px;

.doc-sidebar {
  position: fixed;
  width: $doc-sidebar-width;
  left: 0;
  bottom: 0;
  top: 0;
  background-color: #eee;
}

.doc-body {
  margin-left: $doc-sidebar-width;
}

@include media-breakpoint-down(md) {
  .doc-sidebar {
    position: static;
    width: 100%;
  }

  .doc-body {
    margin-left: 0px;
  }
}
