{"version":3,"file":"9b76d7c9-37e09390a5ca3c418b6a.js","mappings":"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","sources":["webpack://kaluma-website/./node_modules/jshint/src/jshint.js"],"sourcesContent":["/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the MIT license.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jshint quotmark:double */\n\n/*exported console */\nvar _ = require(\"lodash\");\n\nvar events = require(\"events\");\n\nvar vars = require(\"./vars.js\");\n\nvar messages = require(\"./messages.js\");\n\nvar Lexer = require(\"./lex.js\").Lexer;\n\nvar reg = require(\"./reg.js\");\n\nvar state = require(\"./state.js\").state;\n\nvar style = require(\"./style.js\");\n\nvar options = require(\"./options.js\");\n\nvar scopeManager = require(\"./scope-manager.js\");\n\nvar prodParams = require(\"./prod-params.js\"); // We need this module here because environments such as IE and Rhino\n// don't necessarilly expose the 'console' API and browserify uses\n// it to log things. It's a sad state of affair, really.\n\n\nvar console = require(\"console-browserify\"); // We build the application inside a function so that we produce only a singleton\n// variable. That function will be invoked immediately, and its return value is\n// the JSHINT function itself.\n\n\nvar JSHINT = function () {\n  \"use strict\";\n\n  var api,\n      // Extension API\n  // These are operators that should not be used with the ! operator.\n  bang = {\n    \"<\": true,\n    \"<=\": true,\n    \"==\": true,\n    \"===\": true,\n    \"!==\": true,\n    \"!=\": true,\n    \">\": true,\n    \">=\": true,\n    \"+\": true,\n    \"-\": true,\n    \"*\": true,\n    \"/\": true,\n    \"%\": true\n  },\n      declared,\n      // Globals that were declared using /*global ... */ syntax.\n  functions,\n      // All of the functions\n  inblock,\n      indent,\n      lookahead,\n      lex,\n      member,\n      membersOnly,\n      predefined,\n      // Global variables defined by option\n  extraModules = [],\n      emitter = new events.EventEmitter();\n\n  function checkOption(name, isStable, t) {\n    var type, validNames;\n\n    if (isStable) {\n      type = \"\";\n      validNames = options.validNames;\n    } else {\n      type = \"unstable \";\n      validNames = options.unstableNames;\n    }\n\n    name = name.trim();\n\n    if (/^[+-]W\\d{3}$/g.test(name)) {\n      return true;\n    }\n\n    if (validNames.indexOf(name) === -1) {\n      if (t.type !== \"jslint\" && !_.has(options.removed, name)) {\n        error(\"E001\", t, type, name);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n  }\n\n  function isIdentifier(tkn, value) {\n    if (!tkn) return false;\n    if (!tkn.identifier || tkn.value !== value) return false;\n    return true;\n  }\n  /**\n   * ES3 defined a set of \"FutureReservedWords\" in order \"to allow for the\n   * possibility of future adoption of [proposed] extensions.\"\n   *\n   * ES5 reduced the set of FutureReservedWords, in some cases by using them to\n   * define new syntactic forms (e.g. `class` and `const`) and in other cases\n   * by simply allowing their use as Identifiers (e.g. `int` and `goto`).\n   * Separately, ES5 introduced new restrictions on certain tokens, but limited\n   * the restriction to strict mode code (e.g. `let` and `yield`).\n   *\n   * This function determines if a given token describes a reserved word\n   * according to the current state of the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {Token} token\n   */\n\n\n  function isReserved(context, token) {\n    if (!token.reserved) {\n      return false;\n    }\n\n    var meta = token.meta;\n\n    if (meta && meta.isFutureReservedWord) {\n      if (state.inES5()) {\n        // ES3 FutureReservedWord in an ES5 environment.\n        if (!meta.es5) {\n          return false;\n        }\n\n        if (token.isProperty) {\n          return false;\n        }\n      }\n    } else if (meta && meta.es5 && !state.inES5()) {\n      return false;\n    } // Some identifiers are reserved only within a strict mode environment.\n\n\n    if (meta && meta.strictOnly && state.inES5()) {\n      if (!state.option.strict && !state.isStrict()) {\n        return false;\n      }\n    }\n\n    if (token.id === \"await\" && !(context & prodParams.async) && !state.option.module) {\n      return false;\n    }\n\n    if (token.id === \"yield\" && !(context & prodParams.yield)) {\n      return state.isStrict();\n    }\n\n    return true;\n  }\n\n  function supplant(str, data) {\n    return str.replace(/\\{([^{}]*)\\}/g, function (a, b) {\n      var r = data[b];\n      return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n    });\n  }\n\n  function combine(dest, src) {\n    Object.keys(src).forEach(function (name) {\n      if (_.has(JSHINT.blacklist, name)) return;\n      dest[name] = src[name];\n    });\n  }\n\n  function processenforceall() {\n    if (state.option.enforceall) {\n      for (var enforceopt in options.bool.enforcing) {\n        if (state.option[enforceopt] === undefined && !options.noenforceall[enforceopt]) {\n          state.option[enforceopt] = true;\n        }\n      }\n\n      for (var relaxopt in options.bool.relaxing) {\n        if (state.option[relaxopt] === undefined) {\n          state.option[relaxopt] = false;\n        }\n      }\n    }\n  }\n  /**\n   * Apply all linting options according to the status of the `state` object.\n   */\n\n\n  function applyOptions() {\n    var badESOpt = null;\n    processenforceall();\n    /**\n     * TODO: Remove in JSHint 3\n     */\n\n    badESOpt = state.inferEsVersion();\n\n    if (badESOpt) {\n      quit(\"E059\", state.tokens.next, \"esversion\", badESOpt);\n    }\n\n    if (state.inES5()) {\n      combine(predefined, vars.ecmaIdentifiers[5]);\n    }\n\n    if (state.inES6()) {\n      combine(predefined, vars.ecmaIdentifiers[6]);\n    }\n\n    if (state.inES8()) {\n      combine(predefined, vars.ecmaIdentifiers[8]);\n    }\n\n    if (state.inES11()) {\n      combine(predefined, vars.ecmaIdentifiers[11]);\n    }\n    /**\n     * Use `in` to check for the presence of any explicitly-specified value for\n     * `globalstrict` because both `true` and `false` should trigger an error.\n     */\n\n\n    if (state.option.strict === \"global\" && \"globalstrict\" in state.option) {\n      quit(\"E059\", state.tokens.next, \"strict\", \"globalstrict\");\n    }\n\n    if (state.option.module) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"module\", 6);\n      }\n    }\n\n    if (state.option.regexpu) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"regexpu\", 6);\n      }\n    }\n\n    if (state.option.couch) {\n      combine(predefined, vars.couch);\n    }\n\n    if (state.option.qunit) {\n      combine(predefined, vars.qunit);\n    }\n\n    if (state.option.rhino) {\n      combine(predefined, vars.rhino);\n    }\n\n    if (state.option.shelljs) {\n      combine(predefined, vars.shelljs);\n      combine(predefined, vars.node);\n    }\n\n    if (state.option.typed) {\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.phantom) {\n      combine(predefined, vars.phantom);\n    }\n\n    if (state.option.prototypejs) {\n      combine(predefined, vars.prototypejs);\n    }\n\n    if (state.option.node) {\n      combine(predefined, vars.node);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.devel) {\n      combine(predefined, vars.devel);\n    }\n\n    if (state.option.dojo) {\n      combine(predefined, vars.dojo);\n    }\n\n    if (state.option.browser) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.browserify) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n      combine(predefined, vars.browserify);\n    }\n\n    if (state.option.nonstandard) {\n      combine(predefined, vars.nonstandard);\n    }\n\n    if (state.option.jasmine) {\n      combine(predefined, vars.jasmine);\n    }\n\n    if (state.option.jquery) {\n      combine(predefined, vars.jquery);\n    }\n\n    if (state.option.mootools) {\n      combine(predefined, vars.mootools);\n    }\n\n    if (state.option.worker) {\n      combine(predefined, vars.worker);\n    }\n\n    if (state.option.wsh) {\n      combine(predefined, vars.wsh);\n    }\n\n    if (state.option.yui) {\n      combine(predefined, vars.yui);\n    }\n\n    if (state.option.mocha) {\n      combine(predefined, vars.mocha);\n    }\n  } // Produce an error warning.\n\n\n  function quit(code, token, a, b) {\n    var percentage = Math.floor(token.line / state.lines.length * 100);\n    var message = messages.errors[code].desc;\n    var exception = {\n      name: \"JSHintError\",\n      line: token.line,\n      character: token.from,\n      message: message + \" (\" + percentage + \"% scanned).\",\n      raw: message,\n      code: code,\n      a: a,\n      b: b\n    };\n    exception.reason = supplant(message, exception) + \" (\" + percentage + \"% scanned).\";\n    throw exception;\n  }\n\n  function removeIgnoredMessages() {\n    var ignored = state.ignoredLines;\n    if (_.isEmpty(ignored)) return;\n    JSHINT.errors = _.reject(JSHINT.errors, function (err) {\n      return ignored[err.line];\n    });\n  }\n\n  function warning(code, t, a, b, c, d) {\n    var ch, l, w, msg;\n\n    if (/^W\\d{3}$/.test(code)) {\n      if (state.ignored[code]) return;\n      msg = messages.warnings[code];\n    } else if (/E\\d{3}/.test(code)) {\n      msg = messages.errors[code];\n    } else if (/I\\d{3}/.test(code)) {\n      msg = messages.info[code];\n    }\n\n    t = t || state.tokens.next || {};\n\n    if (t.id === \"(end)\") {\n      // `~\n      t = state.tokens.curr;\n    }\n\n    l = t.line;\n    ch = t.from;\n    w = {\n      id: \"(error)\",\n      raw: msg.desc,\n      code: msg.code,\n      evidence: state.lines[l - 1] || \"\",\n      line: l,\n      character: ch,\n      scope: JSHINT.scope,\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    };\n    w.reason = supplant(msg.desc, w);\n    JSHINT.errors.push(w);\n    removeIgnoredMessages();\n    var errors = JSHINT.errors.filter(function (e) {\n      return /E\\d{3}/.test(e.code);\n    });\n\n    if (errors.length >= state.option.maxerr) {\n      quit(\"E043\", t);\n    }\n\n    return w;\n  }\n\n  function warningAt(m, l, ch, a, b, c, d) {\n    return warning(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  function error(m, t, a, b, c, d) {\n    warning(m, t, a, b, c, d);\n  }\n\n  function errorAt(m, l, ch, a, b, c, d) {\n    return error(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  } // Tracking of \"internal\" scripts, like eval containing a static string\n\n\n  function addEvalCode(elem, token) {\n    JSHINT.internals.push({\n      id: \"(internal)\",\n      elem: elem,\n      token: token,\n      code: token.value.replace(/([^\\\\])(\\\\*)\\2\\\\n/g, \"$1\\n\")\n    });\n  }\n  /**\n   * Process an inline linting directive\n   *\n   * @param {Token} directiveToken - the directive-bearing comment token\n   * @param {Token} previous - the token that preceeds the directive\n   */\n\n\n  function lintingDirective(directiveToken, previous) {\n    var body = directiveToken.body.split(\",\").map(function (s) {\n      return s.trim();\n    });\n    var predef = {};\n\n    if (directiveToken.type === \"falls through\") {\n      previous.caseFallsThrough = true;\n      return;\n    }\n\n    if (directiveToken.type === \"globals\") {\n      body.forEach(function (item, idx) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n\n        if (key === \"-\" || !key.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        if (key.charAt(0) === \"-\") {\n          key = key.slice(1);\n          JSHINT.blacklist[key] = key;\n          delete predefined[key];\n        } else {\n          predef[key] = parts.length > 1 && parts[1].trim() === \"true\";\n        }\n      });\n      combine(predefined, predef);\n\n      for (var key in predef) {\n        if (_.has(predef, key)) {\n          declared[key] = directiveToken;\n        }\n      }\n    }\n\n    if (directiveToken.type === \"exported\") {\n      body.forEach(function (e, idx) {\n        if (!e.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        state.funct[\"(scope)\"].addExported(e);\n      });\n    }\n\n    if (directiveToken.type === \"members\") {\n      membersOnly = membersOnly || {};\n      body.forEach(function (m) {\n        var ch1 = m.charAt(0);\n        var ch2 = m.charAt(m.length - 1);\n\n        if (ch1 === ch2 && (ch1 === \"\\\"\" || ch1 === \"'\")) {\n          m = m.substr(1, m.length - 2).replace(\"\\\\\\\"\", \"\\\"\");\n        }\n\n        membersOnly[m] = false;\n      });\n    }\n\n    var numvals = [\"maxstatements\", \"maxparams\", \"maxdepth\", \"maxcomplexity\", \"maxerr\", \"maxlen\", \"indent\"];\n\n    if (directiveToken.type === \"jshint\" || directiveToken.type === \"jslint\" || directiveToken.type === \"jshint.unstable\") {\n      body.forEach(function (item) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n        var val = parts.length > 1 ? parts[1].trim() : \"\";\n        var numberVal;\n\n        if (!checkOption(key, directiveToken.type !== \"jshint.unstable\", directiveToken)) {\n          return;\n        }\n\n        if (numvals.indexOf(key) >= 0) {\n          // GH988 - numeric options can be disabled by setting them to `false`\n          if (val !== \"false\") {\n            numberVal = +val;\n\n            if (typeof numberVal !== \"number\" || !isFinite(numberVal) || numberVal <= 0 || Math.floor(numberVal) !== numberVal) {\n              error(\"E032\", directiveToken, val);\n              return;\n            }\n\n            state.option[key] = numberVal;\n          } else {\n            state.option[key] = key === \"indent\" ? 4 : false;\n          }\n\n          return;\n        }\n\n        if (key === \"validthis\") {\n          // `validthis` is valid only within a function scope.\n          if (state.funct[\"(global)\"]) return void error(\"E009\");\n          if (val !== \"true\" && val !== \"false\") return void error(\"E002\", directiveToken);\n          state.option.validthis = val === \"true\";\n          return;\n        }\n\n        if (key === \"quotmark\") {\n          switch (val) {\n            case \"true\":\n            case \"false\":\n              state.option.quotmark = val === \"true\";\n              break;\n\n            case \"double\":\n            case \"single\":\n              state.option.quotmark = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"shadow\") {\n          switch (val) {\n            case \"true\":\n              state.option.shadow = true;\n              break;\n\n            case \"outer\":\n              state.option.shadow = \"outer\";\n              break;\n\n            case \"false\":\n            case \"inner\":\n              state.option.shadow = \"inner\";\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"unused\") {\n          switch (val) {\n            case \"true\":\n              state.option.unused = true;\n              break;\n\n            case \"false\":\n              state.option.unused = false;\n              break;\n\n            case \"vars\":\n            case \"strict\":\n              state.option.unused = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"latedef\") {\n          switch (val) {\n            case \"true\":\n              state.option.latedef = true;\n              break;\n\n            case \"false\":\n              state.option.latedef = false;\n              break;\n\n            case \"nofunc\":\n              state.option.latedef = \"nofunc\";\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"ignore\") {\n          switch (val) {\n            case \"line\":\n              state.ignoredLines[directiveToken.line] = true;\n              removeIgnoredMessages();\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"strict\") {\n          switch (val) {\n            case \"true\":\n              state.option.strict = true;\n              break;\n\n            case \"false\":\n              state.option.strict = false;\n              break;\n\n            case \"global\":\n            case \"implied\":\n              state.option.strict = val;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          return;\n        }\n\n        if (key === \"module\") {\n          /**\n           * TODO: Extend this restriction to *all* \"environmental\" options.\n           */\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"module\");\n          }\n        }\n\n        if (key === \"esversion\") {\n          switch (val) {\n            case \"3\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n            case \"10\":\n            case \"11\":\n              state.option.moz = false;\n              state.option.esversion = +val;\n              break;\n\n            case \"2015\":\n            case \"2016\":\n            case \"2017\":\n            case \"2018\":\n            case \"2019\":\n            case \"2020\":\n              state.option.moz = false; // Translate specification publication year to version number.\n\n              state.option.esversion = +val - 2009;\n              break;\n\n            default:\n              error(\"E002\", directiveToken);\n          }\n\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"esversion\");\n          }\n\n          return;\n        }\n\n        var match = /^([+-])(W\\d{3})$/g.exec(key);\n\n        if (match) {\n          // ignore for -W..., unignore for +W...\n          state.ignored[match[2]] = match[1] === \"-\";\n          return;\n        }\n\n        var tn;\n\n        if (val === \"true\" || val === \"false\") {\n          if (directiveToken.type === \"jslint\") {\n            tn = options.renamed[key] || key;\n            state.option[tn] = val === \"true\";\n\n            if (options.inverted[tn] !== undefined) {\n              state.option[tn] = !state.option[tn];\n            }\n          } else if (directiveToken.type === \"jshint.unstable\") {\n            /* istanbul ignore next */\n            state.option.unstable[key] = val === \"true\";\n          } else {\n            state.option[key] = val === \"true\";\n          }\n\n          return;\n        }\n\n        error(\"E002\", directiveToken);\n      });\n      applyOptions();\n    }\n  }\n  /**\n   * Return a token beyond the token available in `state.tokens.next`. If no\n   * such token exists, return the \"(end)\" token. This function is used to\n   * determine parsing strategies in cases where the value of the next token\n   * does not provide sufficient information, as is the case with `for` loops,\n   * e.g.:\n   *\n   *     for ( var i in ...\n   *\n   * versus:\n   *\n   *     for ( var i = ...\n   *\n   * @param {number} [p] - offset of desired token; defaults to 0\n   *\n   * @returns {token}\n   */\n\n\n  function peek(p) {\n    var i = p || 0,\n        j = lookahead.length,\n        t;\n\n    if (i < j) {\n      return lookahead[i];\n    }\n\n    while (j <= i) {\n      t = lex.token(); // When the lexer is exhausted, this function should produce the \"(end)\"\n      // token, even in cases where the requested token is beyond the end of\n      // the input stream.\n\n      if (!t) {\n        // If the lookahead buffer is empty, the expected \"(end)\" token was\n        // already emitted by the most recent invocation of `advance` and is\n        // available as the next token.\n        if (!lookahead.length) {\n          return state.tokens.next;\n        }\n\n        return lookahead[j - 1];\n      }\n\n      lookahead[j] = t;\n      j += 1;\n    }\n\n    return t;\n  }\n\n  function peekIgnoreEOL() {\n    var i = 0;\n    var t;\n\n    do {\n      t = peek(i++);\n    } while (t.id === \"(endline)\");\n\n    return t;\n  }\n  /**\n   * Consume the next token.\n   *\n   * @param {string} [expected] - the expected value of the next token's `id`\n   *                              property (in the case of punctuators) or\n   *                              `value` property (in the case of identifiers\n   *                              and literals); if unspecified, any token will\n   *                              be accepted\n   * @param {object} [relatedToken] - the token that informed the expected\n   *                                  value, if any (for example: the opening\n   *                                  brace when a closing brace is expected);\n   *                                  used to produce more meaningful errors\n   */\n\n\n  function advance(expected, relatedToken) {\n    var nextToken = state.tokens.next;\n\n    if (expected && nextToken.id !== expected) {\n      if (relatedToken) {\n        if (nextToken.id === \"(end)\") {\n          error(\"E019\", relatedToken, relatedToken.id);\n        } else {\n          error(\"E020\", nextToken, expected, relatedToken.id, relatedToken.line, nextToken.value);\n        }\n      } else if (nextToken.type !== \"(identifier)\" || nextToken.value !== expected) {\n        error(\"E021\", nextToken, expected, nextToken.value);\n      }\n    }\n\n    state.tokens.prev = state.tokens.curr;\n    state.tokens.curr = state.tokens.next;\n\n    for (;;) {\n      state.tokens.next = lookahead.shift() || lex.token();\n\n      if (!state.tokens.next) {\n        // No more tokens left, give up\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (state.tokens.next.id === \"(end)\" || state.tokens.next.id === \"(error)\") {\n        return;\n      }\n\n      if (state.tokens.next.check) {\n        state.tokens.next.check();\n      }\n\n      if (state.tokens.next.isSpecial) {\n        lintingDirective(state.tokens.next, state.tokens.curr);\n      } else {\n        if (state.tokens.next.id !== \"(endline)\") {\n          break;\n        }\n      }\n    }\n  }\n  /**\n   * Determine whether a given token is an operator.\n   *\n   * @param {token} token\n   *\n   * @returns {boolean}\n   */\n\n\n  function isOperator(token) {\n    return token.first || token.right || token.left || token.id === \"yield\" || token.id === \"await\";\n  }\n\n  function isEndOfExpr(context, curr, next) {\n    if (arguments.length <= 1) {\n      curr = state.tokens.curr;\n      next = state.tokens.next;\n    }\n\n    if (next.id === \"in\" && context & prodParams.noin) {\n      return true;\n    }\n\n    if (next.id === \";\" || next.id === \"}\" || next.id === \":\") {\n      return true;\n    }\n\n    if (next.infix === curr.infix || // Infix operators which follow `yield` should only be consumed as part\n    // of the current expression if allowed by the syntactic grammar. In\n    // effect, this prevents automatic semicolon insertion when `yield` is\n    // followed by a newline and a comma operator (without enabling it when\n    // `yield` is followed by a newline and a `[` token).\n    curr.id === \"yield\" && curr.rbp < next.rbp) {\n      return !sameLine(curr, next);\n    }\n\n    return false;\n  }\n  /**\n   * The `expression` function is the heart of JSHint's parsing behaior. It is\n   * based on the Pratt parser, but it extends that model with a `fud` method.\n   * Short for \"first null denotation,\" it it similar to the `nud` (\"null\n   * denotation\") function, but it is only used on the first token of a\n   * statement. This simplifies usage in statement-oriented languages like\n   * JavaScript.\n   *\n   * .nud  Null denotation\n   * .fud  First null denotation\n   * .led  Left denotation\n   *  lbp  Left binding power\n   *  rbp  Right binding power\n   *\n   * They are elements of the parsing method called Top Down Operator Precedence.\n   *\n   * In addition to parsing, this function applies a number of linting patterns.\n   *\n   * @param {number} context - the parsing context (a bitfield describing\n   *                           conditions of the current parsing operation\n   *                           which can influence how the next tokens are\n   *                           interpreted); see `prod-params.js` for more\n   *                           detail)\n   * @param {number} rbp - the right-binding power of the token to be consumed\n   */\n\n\n  function expression(context, rbp) {\n    var left,\n        isArray = false,\n        isObject = false;\n    var initial = context & prodParams.initial;\n    var curr;\n    context &= ~prodParams.initial;\n    state.nameStack.push();\n    if (state.tokens.next.id === \"(end)\") error(\"E006\", state.tokens.curr);\n    advance();\n\n    if (initial) {\n      state.funct[\"(verb)\"] = state.tokens.curr.value;\n      state.tokens.curr.beginsStmt = true;\n    }\n\n    curr = state.tokens.curr;\n\n    if (initial && curr.fud && (!curr.useFud || curr.useFud(context))) {\n      left = state.tokens.curr.fud(context);\n    } else {\n      if (state.tokens.curr.nud) {\n        left = state.tokens.curr.nud(context, rbp);\n      } else {\n        error(\"E030\", state.tokens.curr, state.tokens.curr.id);\n      }\n\n      while (rbp < state.tokens.next.lbp && !isEndOfExpr(context)) {\n        isArray = state.tokens.curr.value === \"Array\";\n        isObject = state.tokens.curr.value === \"Object\"; // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n        // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n        // \"Line too long.\" error.\n\n        if (left && (left.value || left.first && left.first.value)) {\n          // If the left.value is not \"new\", or the left.first.value is a \".\"\n          // then safely assume that this is not \"new Array()\" and possibly\n          // not \"new Object()\"...\n          if (left.value !== \"new\" || left.first && left.first.value && left.first.value === \".\") {\n            isArray = false; // ...In the case of Object, if the left.value and state.tokens.curr.value\n            // are not equal, then safely assume that this not \"new Object()\"\n\n            if (left.value !== state.tokens.curr.value) {\n              isObject = false;\n            }\n          }\n        }\n\n        advance();\n\n        if (isArray && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W009\", state.tokens.curr);\n        }\n\n        if (isObject && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W010\", state.tokens.curr);\n        }\n\n        if (left && state.tokens.curr.led) {\n          left = state.tokens.curr.led(context, left);\n        } else {\n          error(\"E033\", state.tokens.curr, state.tokens.curr.id);\n        }\n      }\n    }\n\n    state.nameStack.pop();\n    return left;\n  } // Functions for conformance of style.\n\n\n  function sameLine(first, second) {\n    return first.line === (second.startLine || second.line);\n  }\n\n  function nobreaknonadjacent(left, right) {\n    if (!state.option.laxbreak && !sameLine(left, right)) {\n      warning(\"W014\", right, right.value);\n    }\n  }\n\n  function nolinebreak(t) {\n    if (!sameLine(t, state.tokens.next)) {\n      warning(\"E022\", t, t.value);\n    }\n  }\n  /**\n   * Validate the comma token in the \"current\" position of the token stream.\n   *\n   * @param {object} [opts]\n   * @param {boolean} [opts.property] - flag indicating whether the current\n   *                                    comma token is situated directly within\n   *                                    an object initializer\n   * @param {boolean} [opts.allowTrailing] - flag indicating whether the\n   *                                         current comma token may appear\n   *                                         directly before a delimiter\n   *\n   * @returns {boolean} flag indicating the validity of the current comma\n   *                    token; `false` if the token directly causes a syntax\n   *                    error, `true` otherwise\n   */\n\n\n  function checkComma(opts) {\n    var prev = state.tokens.prev;\n    var curr = state.tokens.curr;\n    opts = opts || {};\n\n    if (!sameLine(prev, curr)) {\n      if (!state.option.laxcomma) {\n        if (checkComma.first) {\n          warning(\"I001\", curr);\n          checkComma.first = false;\n        }\n\n        warning(\"W014\", prev, curr.value);\n      }\n    }\n\n    if (state.tokens.next.identifier && !(opts.property && state.inES5())) {\n      // Keywords that cannot follow a comma operator.\n      switch (state.tokens.next.value) {\n        case \"break\":\n        case \"case\":\n        case \"catch\":\n        case \"continue\":\n        case \"default\":\n        case \"do\":\n        case \"else\":\n        case \"finally\":\n        case \"for\":\n        case \"if\":\n        case \"in\":\n        case \"instanceof\":\n        case \"return\":\n        case \"switch\":\n        case \"throw\":\n        case \"try\":\n        case \"var\":\n        case \"let\":\n        case \"while\":\n        case \"with\":\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          return false;\n      }\n    }\n\n    if (state.tokens.next.type === \"(punctuator)\") {\n      switch (state.tokens.next.value) {\n        case \"}\":\n        case \"]\":\n        case \",\":\n        case \")\":\n          if (opts.allowTrailing) {\n            return true;\n          }\n\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Factory function for creating \"symbols\"--objects that will be inherited by\n   * tokens. The objects created by this function are stored in a symbol table\n   * and set as the prototype of the tokens generated by the lexer.\n   *\n   * Note that this definition of \"symbol\" describes an implementation detail\n   * of JSHint and is not related to the ECMAScript value type introduced in\n   * ES2015.\n   *\n   * @param {string} s - the name of the token; for keywords (e.g. `void`) and\n   *                     delimiters (e.g.. `[`), this is the token's text\n   *                     representation; for literals (e.g. numbers) and other\n   *                     \"special\" tokens (e.g. the end-of-file marker) this is\n   *                     a parenthetical value\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function symbol(s, p) {\n    var x = state.syntax[s];\n\n    if (!x || typeof x !== \"object\") {\n      state.syntax[s] = x = {\n        id: s,\n        lbp: p,\n        // Symbols that accept a right-hand side do so with a binding power\n        // that is commonly identical to their left-binding power. (This value\n        // is relevant when determining if the grouping operator is necessary\n        // to override the precedence of surrounding operators.) Because the\n        // exponentiation operator's left-binding power and right-binding power\n        // are distinct, the values must be encoded separately.\n        rbp: p,\n        value: s\n      };\n    }\n\n    return x;\n  }\n  /**\n   * Convenience function for defining delimiter symbols.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function delim(s) {\n    var x = symbol(s, 0);\n    x.delim = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining statement-denoting symbols.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function stmt(s, f) {\n    var x = delim(s);\n    x.identifier = x.reserved = true;\n    x.fud = f;\n    return x;\n  }\n  /**\n   * Convenience function for defining block-statement-denoting symbols.\n   *\n   * A block-statement-denoting symbol is one like 'if' or 'for', which will be\n   * followed by a block and will not have to end with a semicolon.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} - the first null denotation function for the symbol; see\n   *                     the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function blockstmt(s, f) {\n    var x = stmt(s, f);\n    x.block = true;\n    return x;\n  }\n  /**\n   * Denote a given JSHint symbol as an identifier and a reserved keyword.\n   *\n   * @param {object} - a JSHint symbol value\n   *\n   * @returns {object} - the provided object\n   */\n\n\n  function reserveName(x) {\n    var c = x.id.charAt(0);\n\n    if (c >= \"a\" && c <= \"z\" || c >= \"A\" && c <= \"Z\") {\n      x.identifier = x.reserved = true;\n    }\n\n    return x;\n  }\n  /**\n   * Convenience function for defining \"prefix\" symbols--operators that accept\n   * expressions as a right-hand side.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the first null denotation function for the symbol;\n   *                         see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function prefix(s, f) {\n    var x = symbol(s, 150);\n    reserveName(x);\n    x.nud = typeof f === \"function\" ? f : function (context) {\n      this.arity = \"unary\";\n      this.right = expression(context, 150);\n\n      if (this.id === \"++\" || this.id === \"--\") {\n        if (state.option.plusplus) {\n          warning(\"W016\", this, this.id);\n        }\n\n        if (this.right) {\n          checkLeftSideAssign(context, this.right, this);\n        }\n      }\n\n      return this;\n    };\n    return x;\n  }\n  /**\n   * Convenience function for defining \"type\" symbols--those that describe\n   * literal values.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function type(s, f) {\n    var x = symbol(s, 0);\n    x.type = s;\n    x.nud = f;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for reserved\n   * keywords--those that are restricted from use as bindings (and as property\n   * names in ECMAScript 3 environments).\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} func - the first null denotation function for the\n   *                          symbol; see the `expression` function for more\n   *                          detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function reserve(name, func) {\n    var x = type(name, func);\n    x.identifier = true;\n    x.reserved = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for keywords that are\n   * only reserved in some circumstances.\n   *\n   * @param {string} name - the name of the symbol\n   * @param {object} [meta] - a collection of optional arguments\n   * @param {function} [meta.nud] -the null denotation function for the symbol;\n   *                   see the `expression` function for more detail\n   * @param {boolean} [meta.es5] - `true` if the identifier is reserved\n   *                               in ECMAScript 5 or later\n   * @param {boolean} [meta.strictOnly] - `true` if the identifier is only\n   *                                      reserved in strict mode code.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function FutureReservedWord(name, meta) {\n    var x = type(name, state.syntax[\"(identifier)\"].nud);\n    meta = meta || {};\n    meta.isFutureReservedWord = true;\n    x.value = name;\n    x.identifier = true;\n    x.reserved = true;\n    x.meta = meta;\n    return x;\n  }\n  /**\n   * Convenience function for defining \"infix\" symbols--operators that require\n   * operands as both \"land-hand side\" and \"right-hand side\".\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   * @param {boolean} [w] - if `true`\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function infix(s, f, p, w) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      if (!w) {\n        nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      }\n\n      if ((s === \"in\" || s === \"instanceof\") && left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (typeof f === \"function\") {\n        return f(context, left, this);\n      } else {\n        this.left = left;\n        this.right = expression(context, p);\n        return this;\n      }\n    };\n\n    return x;\n  }\n  /**\n   * Convenience function for defining the `=>` token as used in arrow\n   * functions.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function application(s) {\n    var x = symbol(s, 42);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      this.right = doFunction(context, {\n        type: \"arrow\",\n        loneArg: left\n      });\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for relation operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked to enforce any additional\n   *                         linting rules.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function relation(s, f) {\n    var x = symbol(s, 100);\n    x.infix = true;\n\n    x.led = function (context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      var right = this.right = expression(context, 100);\n\n      if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n        warning(\"W019\", this);\n      } else if (f) {\n        f.apply(this, [context, left, right]);\n      }\n\n      if (!left || !right) {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (right.id === \"!\") {\n        warning(\"W018\", right, \"!\");\n      }\n\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Determine if a given token marks the beginning of a UnaryExpression.\n   *\n   * @param {object} token\n   *\n   * @returns {boolean}\n   */\n\n\n  function beginsUnaryExpression(token) {\n    return token.arity === \"unary\" && token.id !== \"++\" && token.id !== \"--\";\n  }\n\n  var typeofValues = {};\n  typeofValues.legacy = [// E4X extended the `typeof` operator to return \"xml\" for the XML and\n  // XMLList types it introduced.\n  // Ref: 11.3.2 The typeof Operator\n  // http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-357.pdf\n  \"xml\", // IE<9 reports \"unknown\" when the `typeof` operator is applied to an\n  // object existing across a COM+ bridge. In lieu of official documentation\n  // (which does not exist), see:\n  // http://robertnyman.com/2005/12/21/what-is-typeof-unknown/\n  \"unknown\"];\n  typeofValues.es3 = [\"undefined\", \"boolean\", \"number\", \"string\", \"function\", \"object\"];\n  typeofValues.es3 = typeofValues.es3.concat(typeofValues.legacy);\n  typeofValues.es6 = typeofValues.es3.concat(\"symbol\", \"bigint\");\n  /**\n   * Validate comparisons between the result of a `typeof` expression and a\n   * string literal.\n   *\n   * @param {token} [left] - one of the values being compared\n   * @param {token} [right] - the other value being compared\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean} - `false` if the second token describes a `typeof`\n   *                       expression and the first token is a string literal\n   *                       whose value is never returned by that operator;\n   *                       `true` otherwise\n   */\n\n  function isTypoTypeof(left, right, state) {\n    var values;\n    if (state.option.notypeof) return false;\n    if (!left || !right) return false;\n    values = state.inES6() ? typeofValues.es6 : typeofValues.es3;\n\n    if (right.type === \"(identifier)\" && right.value === \"typeof\" && left.type === \"(string)\") {\n      if (left.value === \"bigint\") {\n        if (!state.inES11()) {\n          warning(\"W119\", left, \"BigInt\", \"11\");\n        }\n\n        return false;\n      }\n\n      return !_.includes(values, left.value);\n    }\n\n    return false;\n  }\n  /**\n   * Determine if a given token describes the built-in `eval` function.\n   *\n   * @param {token} left\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean}\n   */\n\n\n  function isGlobalEval(left, state) {\n    var isGlobal = false; // permit methods to refer to an \"eval\" key in their own context\n\n    if (left.type === \"this\" && state.funct[\"(context)\"] === null) {\n      isGlobal = true;\n    } // permit use of \"eval\" members of objects\n    else if (left.type === \"(identifier)\") {\n      if (state.option.node && left.value === \"global\") {\n        isGlobal = true;\n      } else if (state.option.browser && (left.value === \"window\" || left.value === \"document\")) {\n        isGlobal = true;\n      }\n    }\n\n    return isGlobal;\n  }\n  /**\n   * Determine if a given token describes a property of a built-in object.\n   *\n   * @param {token} left\n   *\n   * @returns {boolean}\n   */\n\n\n  function findNativePrototype(left) {\n    var natives = [\"Array\", \"ArrayBuffer\", \"Boolean\", \"Collator\", \"DataView\", \"Date\", \"DateTimeFormat\", \"Error\", \"EvalError\", \"Float32Array\", \"Float64Array\", \"Function\", \"Infinity\", \"Intl\", \"Int16Array\", \"Int32Array\", \"Int8Array\", \"Iterator\", \"Number\", \"NumberFormat\", \"Object\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"StopIteration\", \"String\", \"SyntaxError\", \"TypeError\", \"Uint16Array\", \"Uint32Array\", \"Uint8Array\", \"Uint8ClampedArray\", \"URIError\"];\n\n    function walkPrototype(obj) {\n      if (typeof obj !== \"object\") return;\n      return obj.right === \"prototype\" ? obj : walkPrototype(obj.left);\n    }\n\n    function walkNative(obj) {\n      while (!obj.identifier && typeof obj.left === \"object\") {\n        obj = obj.left;\n      }\n\n      if (obj.identifier && natives.indexOf(obj.value) >= 0 && state.funct[\"(scope)\"].isPredefined(obj.value)) {\n        return obj.value;\n      }\n    }\n\n    var prototype = walkPrototype(left);\n    if (prototype) return walkNative(prototype);\n  }\n  /**\n   * Determine if the given token is a valid assignment target; emit errors\n   * and/or warnings as appropriate\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {token} left - the left hand side of the assignment\n   * @param {token=} assignToken - the token for the assignment, used for\n   *                               reporting\n   * @param {object=} options - optional object\n   * @param {boolean} options.allowDestructuring - whether to allow\n   *                                               destructuring binding\n   *\n   * @returns {boolean} Whether the left hand side is OK\n   */\n\n\n  function checkLeftSideAssign(context, left, assignToken, options) {\n    var allowDestructuring = options && options.allowDestructuring;\n    assignToken = assignToken || left;\n\n    if (state.option.freeze) {\n      var nativeObject = findNativePrototype(left);\n      if (nativeObject) warning(\"W121\", left, nativeObject);\n    }\n\n    if (left.identifier && !left.isMetaProperty) {\n      // The `reassign` method also calls `modify`, but we are specific in\n      // order to catch function re-assignment and globals re-assignment\n      state.funct[\"(scope)\"].block.reassign(left.value, left);\n    }\n\n    if (left.id === \".\") {\n      if (!left.left || left.left.value === \"arguments\" && !state.isStrict()) {\n        warning(\"W143\", assignToken);\n      }\n\n      state.nameStack.set(state.tokens.prev);\n      return true;\n    } else if (left.id === \"{\" || left.id === \"[\") {\n      if (!allowDestructuring || !left.destructAssign) {\n        if (left.id === \"{\" || !left.left) {\n          warning(\"E031\", assignToken);\n        } else if (left.left.value === \"arguments\" && !state.isStrict()) {\n          warning(\"W143\", assignToken);\n        }\n      }\n\n      if (left.id === \"[\") {\n        state.nameStack.set(left.right);\n      }\n\n      return true;\n    } else if (left.identifier && !isReserved(context, left) && !left.isMetaProperty) {\n      if (state.funct[\"(scope)\"].bindingtype(left.value) === \"exception\") {\n        warning(\"W022\", left);\n      }\n\n      if (left.value === \"eval\" && state.isStrict()) {\n        error(\"E031\", assignToken);\n        return false;\n      } else if (left.value === \"arguments\") {\n        if (!state.isStrict()) {\n          warning(\"W143\", assignToken);\n        } else {\n          error(\"E031\", assignToken);\n          return false;\n        }\n      }\n\n      state.nameStack.set(left);\n      return true;\n    }\n\n    error(\"E031\", assignToken);\n    return false;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for assignment operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator (see the `infix`\n   *                         function)\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function assignop(s, f) {\n    var x = infix(s, typeof f === \"function\" ? f : function (context, left, that) {\n      that.left = left;\n      checkLeftSideAssign(context, left, that, {\n        allowDestructuring: true\n      });\n      that.right = expression(context, 10);\n      return that;\n    }, 20);\n    x.exps = true;\n    x.assign = true;\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for bitwise operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the left denotation function for the symbol; see\n   *                         the `expression` function for more detail\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function bitwise(s, f, p) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = typeof f === \"function\" ? f : function (context, left) {\n      if (state.option.bitwise) {\n        warning(\"W016\", this, this.id);\n      }\n\n      this.left = left;\n      this.right = expression(context, p);\n      return this;\n    };\n    return x;\n  }\n  /**\n   * Convenience function for defining JSHint symbols for bitwise assignment\n   * operators. See the `assignop` function for more detail.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function bitwiseassignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function (context, left, that) {\n      if (state.option.bitwise) {\n        warning(\"W016\", that, that.id);\n      }\n\n      checkLeftSideAssign(context, left, that);\n      that.right = expression(context, 10);\n      return that;\n    }, 20);\n  }\n  /**\n   * Convenience function for defining JSHint symbols for those operators which\n   * have a single operand that appears before them in the source code.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n\n\n  function suffix(s) {\n    var x = symbol(s, 150);\n\n    x.led = function (context, left) {\n      // this = suffix e.g. \"++\" punctuator\n      // left = symbol operated e.g. \"a\" identifier or \"a.b\" punctuator\n      if (state.option.plusplus) {\n        warning(\"W016\", this, this.id);\n      }\n\n      checkLeftSideAssign(context, left, this);\n      this.left = left;\n      return this;\n    };\n\n    return x;\n  }\n  /**\n   * Retrieve the value of the next token if it is an identifier and optionally\n   * advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   * @param {boolean} [preserve] - `true` if the token should not be consumed\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function optionalidentifier(context, isName, preserve) {\n    if (!state.tokens.next.identifier) {\n      return;\n    }\n\n    if (!preserve) {\n      advance();\n    }\n\n    var curr = state.tokens.curr;\n\n    if (isReserved(context, curr) && !(isName && state.inES5())) {\n      warning(\"W024\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    return curr.value;\n  }\n  /**\n   * Consume the \"...\" token which designates \"spread\" and \"rest\" operations if\n   * it is present. If the operator is repeated, consume every repetition, and\n   * issue a single error describing the syntax error.\n   *\n   * @param {string} operation - either \"spread\" or \"rest\"\n   *\n   * @returns {boolean} a value describing whether or not any tokens were\n   *                    consumed in this way\n   */\n\n\n  function spreadrest(operation) {\n    if (!checkPunctuator(state.tokens.next, \"...\")) {\n      return false;\n    }\n\n    if (!state.inES6(true)) {\n      warning(\"W119\", state.tokens.next, operation + \" operator\", \"6\");\n    }\n\n    advance();\n\n    if (checkPunctuator(state.tokens.next, \"...\")) {\n      warning(\"E024\", state.tokens.next, \"...\");\n\n      while (checkPunctuator(state.tokens.next, \"...\")) {\n        advance();\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Ensure that the current token is an identifier and retrieve its value.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function identifier(context, isName) {\n    var i = optionalidentifier(context, isName, false);\n\n    if (i) {\n      return i;\n    }\n\n    error(\"E030\", state.tokens.next, state.tokens.next.value); // The token should be consumed after a warning is issued so the parser\n    // can continue as though an identifier were found. The semicolon token\n    // should not be consumed in this way so that the parser interprets it as\n    // a statement delimiter;\n\n    if (state.tokens.next.id !== \";\") {\n      advance();\n    }\n  }\n  /**\n   * Determine if the provided token may be evaluated and emit a linting\n   * warning if this is note the case.\n   *\n   * @param {token} controlToken\n   */\n\n\n  function reachable(controlToken) {\n    var i = 0,\n        t;\n\n    if (state.tokens.next.id !== \";\" || controlToken.inBracelessBlock) {\n      return;\n    }\n\n    for (;;) {\n      do {\n        t = peek(i);\n        i += 1;\n      } while (t.id !== \"(end)\" && t.id === \"(comment)\");\n\n      if (t.reach) {\n        return;\n      }\n\n      if (t.id !== \"(endline)\") {\n        if (t.id === \"function\") {\n          if (state.option.latedef === true) {\n            warning(\"W026\", t);\n          }\n\n          break;\n        }\n\n        warning(\"W027\", t, t.value, controlToken.value);\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the semicolon that delimits the statement currently being parsed,\n   * emitting relevant warnings/errors as appropriate.\n   *\n   * @param {token} stmt - token describing the statement under consideration\n   */\n\n\n  function parseFinalSemicolon(stmt) {\n    if (state.tokens.next.id !== \";\") {\n      // don't complain about unclosed templates / strings\n      if (state.tokens.next.isUnclosed) return advance();\n      var isSameLine = sameLine(state.tokens.curr, state.tokens.next) && state.tokens.next.id !== \"(end)\";\n      var blockEnd = checkPunctuator(state.tokens.next, \"}\");\n\n      if (isSameLine && !blockEnd && !(stmt.id === \"do\" && state.inES6(true))) {\n        errorAt(\"E058\", state.tokens.curr.line, state.tokens.curr.character);\n      } else if (!state.option.asi) {\n        // If this is the last statement in a block that ends on the same line\n        // *and* option lastsemic is on, ignore the warning.  Otherwise, issue\n        // a warning about missing semicolon.\n        if (!(blockEnd && isSameLine && state.option.lastsemic)) {\n          warningAt(\"W033\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n      }\n    } else {\n      advance(\";\");\n    }\n  }\n  /**\n   * Consume a statement.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {token} - the token describing the statement\n   */\n\n\n  function statement(context) {\n    var i = indent,\n        r,\n        t = state.tokens.next,\n        hasOwnScope = false;\n    context |= prodParams.initial;\n\n    if (t.id === \";\") {\n      advance(\";\");\n      return;\n    } // Is this a labelled statement?\n\n\n    var res = isReserved(context, t); // We're being more tolerant here: if someone uses\n    // a FutureReservedWord (that is not meant to start a statement)\n    // as a label, we warn but proceed anyway.\n\n    if (res && t.meta && t.meta.isFutureReservedWord && !t.fud) {\n      warning(\"W024\", t, t.id);\n      res = false;\n    }\n\n    if (t.identifier && !res && peek().id === \":\") {\n      advance();\n      advance(\":\");\n      hasOwnScope = true;\n      state.funct[\"(scope)\"].stack();\n      state.funct[\"(scope)\"].block.addLabel(t.value, {\n        token: state.tokens.curr\n      });\n\n      if (!state.tokens.next.labelled && state.tokens.next.value !== \"{\") {\n        warning(\"W028\", state.tokens.next, t.value, state.tokens.next.value);\n      }\n\n      t = state.tokens.next;\n    } // Is it a lonely block?\n\n\n    if (t.id === \"{\") {\n      // Is it a switch case block?\n      //\n      //  switch (foo) {\n      //    case bar: { <= here.\n      //      ...\n      //    }\n      //  }\n      var iscase = state.funct[\"(verb)\"] === \"case\" && state.tokens.curr.value === \":\";\n      block(context, true, true, false, false, iscase);\n\n      if (hasOwnScope) {\n        state.funct[\"(scope)\"].unstack();\n      }\n\n      return;\n    } // Parse the statement.\n\n\n    r = expression(context, 0);\n\n    if (r && !(r.identifier && r.value === \"function\") && !(r.type === \"(punctuator)\" && r.left && r.left.identifier && r.left.value === \"function\")) {\n      if (!state.isStrict() && state.stmtMissingStrict()) {\n        warning(\"E007\");\n      }\n    } // Look for the final semicolon.\n\n\n    if (!t.block) {\n      if (!state.option.expr && (!r || !r.exps)) {\n        warning(\"W030\", state.tokens.curr);\n      } else if (state.option.nonew && r && r.left && r.id === \"(\" && r.left.id === \"new\") {\n        warning(\"W031\", t);\n      }\n\n      parseFinalSemicolon(t);\n    } // Restore the indentation.\n\n\n    indent = i;\n\n    if (hasOwnScope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return r;\n  }\n  /**\n   * Consume a series of statements until encountering either the end of the\n   * program or a token that interrupts control flow.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {Array<token>} - the tokens consumed\n   */\n\n\n  function statements(context) {\n    var a = [],\n        p;\n\n    while (!state.tokens.next.reach && state.tokens.next.id !== \"(end)\") {\n      if (state.tokens.next.id === \";\") {\n        p = peek();\n\n        if (!p || p.id !== \"(\" && p.id !== \"[\") {\n          warning(\"W032\");\n        }\n\n        advance(\";\");\n      } else {\n        a.push(statement(context));\n      }\n    }\n\n    return a;\n  }\n  /**\n   * Parse any directives in a directive prologue.\n   */\n\n\n  function directives() {\n    var current = state.tokens.next;\n\n    while (state.tokens.next.id === \"(string)\") {\n      var next = peekIgnoreEOL();\n\n      if (!isEndOfExpr(0, current, next)) {\n        break;\n      }\n\n      current = next;\n      advance();\n      var directive = state.tokens.curr.value;\n\n      if (state.directive[directive] || directive === \"use strict\" && state.option.strict === \"implied\") {\n        warning(\"W034\", state.tokens.curr, directive);\n      } // From ECMAScript 2016:\n      //\n      // > 14.1.2 Static Semantics: Early Errors\n      // >\n      // > [...]\n      // > - It is a Syntax Error if ContainsUseStrict of FunctionBody is true\n      // >   and IsSimpleParameterList of FormalParameters is false.\n\n\n      if (directive === \"use strict\" && state.inES7() && !state.funct[\"(global)\"] && state.funct[\"(hasSimpleParams)\"] === false) {\n        error(\"E065\", state.tokens.curr);\n      }\n\n      state.directive[directive] = state.tokens.curr;\n      parseFinalSemicolon(current);\n    }\n\n    if (state.isStrict()) {\n      state.option.undef = true;\n    }\n  }\n  /**\n   * Parses a single block. A block is a sequence of statements wrapped in\n   * braces.\n   *\n   * @param {number} context - parsing context\n   * @param {boolean} ordinary - `true` for everything but function bodies and\n   *                             try blocks\n   * @param {boolean} [stmt] - `true` if block can be a single statement (e.g.\n   *                           in if/for/while)\n   * @param {boolean} [isfunc] - `true` if block is a function body\n   * @param {boolean} [isfatarrow] - `true` if its a body of a fat arrow\n   *                                 function\n   * @param {boolean} [iscase] - `true` if block is a switch case block\n   *\n   * @returns {token} - the token describing the block\n   */\n\n\n  function block(context, ordinary, stmt, isfunc, isfatarrow, iscase) {\n    var a,\n        b = inblock,\n        old_indent = indent,\n        m,\n        t,\n        d;\n    inblock = ordinary;\n    t = state.tokens.next;\n    var metrics = state.funct[\"(metrics)\"];\n    metrics.nestedBlockDepth += 1;\n    metrics.verifyMaxNestedBlockDepthPerFunction();\n\n    if (state.tokens.next.id === \"{\") {\n      advance(\"{\"); // create a new block scope\n\n      state.funct[\"(scope)\"].stack();\n\n      if (state.tokens.next.id !== \"}\") {\n        indent += state.option.indent;\n\n        while (!ordinary && state.tokens.next.from > indent) {\n          indent += state.option.indent;\n        }\n\n        if (isfunc) {\n          m = {};\n\n          for (d in state.directive) {\n            m[d] = state.directive[d];\n          }\n\n          directives();\n          state.funct[\"(isStrict)\"] = state.isStrict();\n\n          if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n            if (!m[\"use strict\"] && !state.isStrict()) {\n              warning(\"E007\");\n            }\n          }\n        }\n\n        a = statements(context);\n        metrics.statementCount += a.length;\n        indent -= state.option.indent;\n      } else if (isfunc) {\n        // Ensure property is set for functions with empty bodies.\n        state.funct[\"(isStrict)\"] = state.isStrict();\n      }\n\n      advance(\"}\", t);\n\n      if (isfunc) {\n        state.funct[\"(scope)\"].validateParams(isfatarrow);\n\n        if (m) {\n          state.directive = m;\n        }\n      }\n\n      state.funct[\"(scope)\"].unstack();\n      indent = old_indent;\n    } else if (!ordinary) {\n      if (isfunc) {\n        state.funct[\"(scope)\"].stack();\n\n        if (stmt && !isfatarrow && !state.inMoz()) {\n          error(\"W118\", state.tokens.curr, \"function closure expressions\");\n        }\n\n        if (isfatarrow) {\n          state.funct[\"(scope)\"].validateParams(true);\n        }\n\n        var expr = expression(context, 10);\n\n        if (state.option.noreturnawait && context & prodParams.async && expr.identifier && expr.value === \"await\") {\n          warning(\"W146\", expr);\n        }\n\n        if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n          if (!state.isStrict()) {\n            warning(\"E007\");\n          }\n        }\n\n        state.funct[\"(scope)\"].unstack();\n      } else {\n        error(\"E021\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n    } else {\n      state.funct[\"(scope)\"].stack();\n\n      if (!stmt || state.option.curly) {\n        warning(\"W116\", state.tokens.next, \"{\", state.tokens.next.value);\n      } // JSHint observes Annex B of the ECMAScript specification by default,\n      // where function declarations are permitted in the statement positions\n      // of IfStatements.\n\n\n      var supportsFnDecl = state.funct[\"(verb)\"] === \"if\" || state.tokens.curr.id === \"else\";\n      state.tokens.next.inBracelessBlock = true;\n      indent += state.option.indent; // test indentation only if statement is in new line\n\n      a = [statement(context)];\n      indent -= state.option.indent;\n\n      if (a[0] && a[0].declaration && !(supportsFnDecl && a[0].id === \"function\")) {\n        error(\"E048\", a[0], a[0].id[0].toUpperCase() + a[0].id.slice(1));\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    } // Don't clear and let it propagate out if it is \"break\", \"return\" or\n    // similar in switch case\n\n\n    switch (state.funct[\"(verb)\"]) {\n      case \"break\":\n      case \"continue\":\n      case \"return\":\n      case \"throw\":\n        if (iscase) {\n          break;\n        }\n\n      /* falls through */\n\n      default:\n        state.funct[\"(verb)\"] = null;\n    }\n\n    inblock = b;\n\n    if (ordinary && state.option.noempty && (!a || a.length === 0)) {\n      warning(\"W035\", state.tokens.prev);\n    }\n\n    metrics.nestedBlockDepth -= 1;\n    return a;\n  }\n  /**\n   * Update the global state which tracks all statically-identifiable property\n   * names, and emit a warning if the `members` linting directive is in use and\n   * does not include the given name.\n   *\n   * @param {string} m - the property name\n   */\n\n\n  function countMember(m) {\n    if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n      warning(\"W036\", state.tokens.curr, m);\n    }\n\n    if (typeof member[m] === \"number\") {\n      member[m] += 1;\n    } else {\n      member[m] = 1;\n    }\n  } // Build the syntax table by declaring the syntactic elements of the language.\n\n\n  type(\"(number)\", function () {\n    if (state.tokens.next.id === \".\") {\n      warning(\"W005\", this);\n    }\n\n    return this;\n  });\n  type(\"(string)\", function () {\n    return this;\n  });\n  state.syntax[\"(identifier)\"] = {\n    type: \"(identifier)\",\n    lbp: 0,\n    identifier: true,\n    nud: function nud(context) {\n      var v = this.value; // If this identifier is the lone parameter to a shorthand \"fat arrow\"\n      // function definition, i.e.\n      //\n      //     x => x;\n      //\n      // ...it should not be considered as a variable in the current scope. It\n      // will be added to the scope of the new function when the next token is\n      // parsed, so it can be safely ignored for now.\n\n      var isLoneArrowParam = state.tokens.next.id === \"=>\";\n\n      if (isReserved(context, this)) {\n        warning(\"W024\", this, v);\n      } else if (!isLoneArrowParam && !state.funct[\"(comparray)\"].check(v)) {\n        state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n      }\n\n      return this;\n    },\n    led: function led() {\n      /* istanbul ignore next */\n      error(\"E033\", state.tokens.next, state.tokens.next.value);\n    }\n  };\n  var baseTemplateSyntax = {\n    identifier: false,\n    template: true\n  };\n  state.syntax[\"(template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(template middle)\"] = _.extend({\n    lbp: 0,\n    type: \"(template middle)\",\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(template tail)\"] = _.extend({\n    lbp: 0,\n    type: \"(template tail)\",\n    tail: true,\n    noSubst: false\n  }, baseTemplateSyntax);\n  state.syntax[\"(no subst template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: true,\n    tail: true // mark as tail, since it's always the last component\n\n  }, baseTemplateSyntax);\n  type(\"(regexp)\", function () {\n    return this;\n  }); // ECMAScript parser\n\n  delim(\"(endline)\");\n\n  (function (x) {\n    x.line = x.from = 0;\n  })(delim(\"(begin)\"));\n\n  delim(\"(end)\").reach = true;\n  delim(\"(error)\").reach = true;\n  delim(\"}\").reach = true;\n  delim(\")\");\n  delim(\"]\");\n  delim(\"\\\"\").reach = true;\n  delim(\"'\").reach = true;\n  delim(\";\");\n  delim(\":\").reach = true;\n  delim(\"#\");\n  reserve(\"else\");\n  reserve(\"case\").reach = true;\n  reserve(\"catch\");\n  reserve(\"default\").reach = true;\n  reserve(\"finally\");\n  reserve(\"true\", function () {\n    return this;\n  });\n  reserve(\"false\", function () {\n    return this;\n  });\n  reserve(\"null\", function () {\n    return this;\n  });\n  reserve(\"this\", function () {\n    if (state.isStrict() && !isMethod() && !state.option.validthis && (state.funct[\"(statement)\"] && state.funct[\"(name)\"].charAt(0) > \"Z\" || state.funct[\"(global)\"])) {\n      warning(\"W040\", this);\n    }\n\n    return this;\n  });\n\n  (function (superSymbol) {\n    superSymbol.rbp = 161;\n  })(reserve(\"super\", function () {\n    superNud.call(state.tokens.curr, this);\n    return this;\n  }));\n\n  assignop(\"=\", \"assign\");\n  assignop(\"+=\", \"assignadd\");\n  assignop(\"-=\", \"assignsub\");\n  assignop(\"*=\", \"assignmult\");\n\n  assignop(\"/=\", \"assigndiv\").nud = function () {\n    /* istanbul ignore next */\n    error(\"E014\");\n  };\n\n  assignop(\"%=\", \"assignmod\");\n  assignop(\"**=\", function (context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    that.left = left;\n    checkLeftSideAssign(context, left, that);\n    that.right = expression(context, 10);\n    return that;\n  });\n  bitwiseassignop(\"&=\");\n  bitwiseassignop(\"|=\");\n  bitwiseassignop(\"^=\");\n  bitwiseassignop(\"<<=\");\n  bitwiseassignop(\">>=\");\n  bitwiseassignop(\">>>=\");\n  infix(\",\", function (context, left, that) {\n    if (state.option.nocomma) {\n      warning(\"W127\", that);\n    }\n\n    that.left = left;\n\n    if (checkComma()) {\n      that.right = expression(context, 10);\n    } else {\n      that.right = null;\n    }\n\n    return that;\n  }, 10, true);\n  infix(\"?\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context & ~prodParams.noin, 10);\n    advance(\":\");\n    expression(context, 10);\n    return that;\n  }, 30);\n  infix(\"||\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, 40);\n    return that;\n  }, 40);\n  var andPrecedence = 50;\n  infix(\"&&\", function (context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, andPrecedence);\n    return that;\n  }, andPrecedence);\n  infix(\"??\", function (context, left, that) {\n    if (!left.paren && (left.id === \"||\" || left.id === \"&&\")) {\n      error(\"E024\", that, \"??\");\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", that, \"nullish coalescing\", \"11\");\n    }\n\n    increaseComplexityCount();\n    that.left = left;\n    var right = that.right = expression(context, 39);\n\n    if (!right) {\n      error(\"E024\", state.tokens.next, state.tokens.next.id);\n    } else if (!right.paren && (right.id === \"||\" || right.id === \"&&\")) {\n      error(\"E024\", that.right, that.right.id);\n    }\n\n    return that;\n  }, 39); // The Exponentiation operator, introduced in ECMAScript 2016\n  //\n  // ExponentiationExpression[Yield] :\n  //   UnaryExpression[?Yield]\n  //   UpdateExpression[?Yield] ** ExponentiationExpression[?Yield]\n\n  infix(\"**\", function (context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    } // Disallow UnaryExpressions which are not wrapped in parenthesis\n\n\n    if (!left.paren && beginsUnaryExpression(left)) {\n      error(\"E024\", that, \"**\");\n    }\n\n    that.left = left;\n    that.right = expression(context, that.rbp);\n    return that;\n  }, 150);\n  state.syntax[\"**\"].rbp = 140;\n  bitwise(\"|\", \"bitor\", 70);\n  bitwise(\"^\", \"bitxor\", 80);\n  bitwise(\"&\", \"bitand\", 90);\n  relation(\"==\", function (context, left, right) {\n    var eqnull = state.option.eqnull && ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    switch (true) {\n      case !eqnull && state.option.eqeqeq:\n        this.from = this.character;\n        warning(\"W116\", this, \"===\", \"==\");\n        break;\n\n      /* istanbul ignore next */\n\n      case isTypoTypeof(right, left, state):\n        warning(\"W122\", this, right.value);\n        break;\n\n      case isTypoTypeof(left, right, state):\n        warning(\"W122\", this, left.value);\n        break;\n    }\n\n    return this;\n  });\n  relation(\"===\", function (context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"!=\", function (context, left, right) {\n    var eqnull = state.option.eqnull && ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    if (!eqnull && state.option.eqeqeq) {\n      this.from = this.character;\n      warning(\"W116\", this, \"!==\", \"!=\");\n    } else if (isTypoTypeof(right, left, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"!==\", function (context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n\n    return this;\n  });\n  relation(\"<\");\n  relation(\">\");\n  relation(\"<=\");\n  relation(\">=\");\n  bitwise(\"<<\", \"shiftleft\", 120);\n  bitwise(\">>\", \"shiftright\", 120);\n  bitwise(\">>>\", \"shiftrightunsigned\", 120);\n  infix(\"in\", \"in\", 120);\n  infix(\"instanceof\", function (context, left, token) {\n    var right;\n    var scope = state.funct[\"(scope)\"];\n    token.left = left;\n    token.right = right = expression(context, 120); // This condition reflects a syntax error which will be reported by the\n    // `expression` function.\n\n    if (!right) {\n      return token;\n    }\n\n    if (right.id === \"(number)\" || right.id === \"(string)\" || right.value === \"null\" || right.value === \"undefined\" && !scope.has(\"undefined\") || right.arity === \"unary\" || right.id === \"{\" || right.id === \"[\" && !right.right || right.id === \"(regexp)\" || right.id === \"(template)\" && !right.tag) {\n      error(\"E060\");\n    }\n\n    if (right.id === \"function\") {\n      warning(\"W139\");\n    }\n\n    return token;\n  }, 120);\n  infix(\"+\", function (context, left, that) {\n    var next = state.tokens.next;\n    var right;\n    that.left = left;\n    that.right = right = expression(context, 130);\n\n    if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n      left.value += right.value;\n      left.character = right.character;\n\n      if (!state.option.scripturl && reg.javascriptURL.test(left.value)) {\n        warning(\"W050\", left);\n      }\n\n      return left;\n    }\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"+\", function (context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"-\", function (context, left, that) {\n    var next = state.tokens.next;\n    that.left = left;\n    that.right = expression(context, 130);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"-\", function (context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"*\", \"mult\", 140);\n  infix(\"/\", \"div\", 140);\n  infix(\"%\", \"mod\", 140);\n  suffix(\"++\");\n  prefix(\"++\", \"preinc\");\n  state.syntax[\"++\"].exps = true;\n  suffix(\"--\");\n  prefix(\"--\", \"predec\");\n  state.syntax[\"--\"].exps = true;\n  prefix(\"delete\", function (context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n\n    if (!p) {\n      return this;\n    }\n\n    if (p.id !== \".\" && p.id !== \"[\") {\n      warning(\"W051\");\n    }\n\n    this.first = p; // The `delete` operator accepts unresolvable references when not in strict\n    // mode, so the operand may be undefined.\n\n    if (p.identifier && !state.isStrict()) {\n      p.forgiveUndef = true;\n    }\n\n    return this;\n  }).exps = true;\n  prefix(\"~\", function (context) {\n    if (state.option.bitwise) {\n      warning(\"W016\", this, \"~\");\n    }\n\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n    return this;\n  });\n  infix(\"...\");\n  prefix(\"!\", function (context) {\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (!this.right) {\n      // '!' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    if (bang[this.right.id] === true) {\n      warning(\"W018\", this, \"!\");\n    }\n\n    return this;\n  });\n  prefix(\"typeof\", function (context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    this.first = this.right = p;\n\n    if (!p) {\n      // 'typeof' followed by nothing? Give up.\n      quit(\"E041\", this);\n    } // The `typeof` operator accepts unresolvable references, so the operand\n    // may be undefined.\n\n\n    if (p.identifier) {\n      p.forgiveUndef = true;\n    }\n\n    return this;\n  });\n  prefix(\"new\", function (context) {\n    var mp = metaProperty(context, \"target\", function () {\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.prev, \"new.target\", \"6\");\n      }\n\n      var inFunction,\n          c = state.funct;\n\n      while (c) {\n        inFunction = !c[\"(global)\"];\n\n        if (!c[\"(arrow)\"]) {\n          break;\n        }\n\n        c = c[\"(context)\"];\n      }\n\n      if (!inFunction) {\n        warning(\"W136\", state.tokens.prev, \"new.target\");\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    var opening = state.tokens.next;\n    var c = expression(context, 155),\n        i;\n\n    if (!c) {\n      return this;\n    }\n\n    if (!c.paren && c.rbp > 160) {\n      error(\"E024\", opening, opening.value);\n    }\n\n    if (c.id !== \"function\") {\n      if (c.identifier) {\n        switch (c.value) {\n          case \"Number\":\n          case \"String\":\n          case \"Boolean\":\n          case \"Math\":\n          case \"JSON\":\n            warning(\"W053\", state.tokens.prev, c.value);\n            break;\n\n          case \"Symbol\":\n            if (state.inES6()) {\n              warning(\"W053\", state.tokens.prev, c.value);\n            }\n\n            break;\n\n          case \"Function\":\n            if (!state.option.evil) {\n              warning(\"W054\");\n            }\n\n            break;\n\n          case \"Date\":\n          case \"RegExp\":\n          case \"this\":\n            break;\n\n          default:\n            i = c.value.substr(0, 1);\n\n            if (state.option.newcap && (i < \"A\" || i > \"Z\") && !state.funct[\"(scope)\"].isPredefined(c.value)) {\n              warning(\"W055\", state.tokens.curr);\n            }\n\n        }\n      } else {\n        if (c.id === \"?.\" && !c.paren) {\n          error(\"E024\", c, \"?.\");\n        } else if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n          /* istanbul ignore next */\n          warning(\"W056\", state.tokens.curr);\n        }\n      }\n    } else {\n      if (!state.option.supernew) warning(\"W057\", this);\n    }\n\n    if (state.tokens.next.id !== \"(\" && !state.option.supernew) {\n      warning(\"W058\", state.tokens.curr, state.tokens.curr.value);\n    }\n\n    this.first = this.right = c;\n    return this;\n  });\n  state.syntax[\"new\"].exps = true;\n  var classDeclaration = blockstmt(\"class\", function (context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n\n    state.inClassBody = true; // Class Declaration: 'class <Classname>'\n\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context); // unintialized, so that the 'extends' clause is parsed while the class is in TDZ\n\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: false,\n        token: classNameToken\n      });\n    } // Class Declaration: 'class <Classname> extends <Superclass>'\n\n\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].initialize(className);\n    } else {\n      this.name = null;\n    }\n\n    state.funct[\"(scope)\"].stack();\n    classBody(this, context);\n    return this;\n  });\n  classDeclaration.exps = true;\n  classDeclaration.declaration = true;\n  /*\n    Class expression\n     The Block- and Expression- handling for \"class\" are almost identical, except for the ordering of steps.\n    In an expression:, the name should not be saved into the calling scope, but is still accessible inside the definition, so we open a new scope first, then save the name. We also mark it as used.\n  */\n\n  prefix(\"class\", function (context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n\n    state.inClassBody = true; // Class Declaration: 'class <Classname>'\n\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n    } // Class Declaration: 'class <Classname> extends <Superclass>'\n\n\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    state.funct[\"(scope)\"].stack();\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: true,\n        token: classNameToken\n      });\n      state.funct[\"(scope)\"].block.use(className, classNameToken);\n    } else {\n      this.name = null;\n    }\n\n    classBody(this, context);\n    return this;\n  });\n\n  function classBody(classToken, context) {\n    var props = Object.create(null);\n    var name, accessorType, token, isStatic, inGenerator, hasConstructor;\n    /* istanbul ignore else */\n\n    if (state.tokens.next.value === \"{\") {\n      advance(\"{\");\n    } else {\n      warning(\"W116\", state.tokens.curr, \"identifier\", state.tokens.next.type); //?\n\n      advance();\n    }\n\n    while (state.tokens.next.value !== \"}\") {\n      isStatic = false;\n      inGenerator = false;\n      context &= ~prodParams.preAsync;\n\n      if (state.tokens.next.value === \"static\" && !checkPunctuator(peek(), \"(\")) {\n        isStatic = true;\n        advance();\n      }\n\n      if (state.tokens.next.value === \"async\") {\n        if (!checkPunctuator(peek(), \"(\")) {\n          context |= prodParams.preAsync;\n          advance();\n          nolinebreak(state.tokens.curr);\n\n          if (checkPunctuator(state.tokens.next, \"*\")) {\n            inGenerator = true;\n            advance(\"*\");\n\n            if (!state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            }\n          }\n\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"async functions\", \"8\");\n          }\n        }\n      }\n\n      if (state.tokens.next.value === \"*\") {\n        inGenerator = true;\n        advance();\n      }\n\n      token = state.tokens.next;\n\n      if ((token.value === \"set\" || token.value === \"get\") && !checkPunctuator(peek(), \"(\")) {\n        if (inGenerator) {\n          /* istanbul ignore next */\n          error(\"E024\", token, token.value);\n        }\n\n        accessorType = token.value;\n        advance();\n        token = state.tokens.next;\n\n        if (!isStatic && token.value === \"constructor\") {\n          error(\"E049\", token, \"class \" + accessorType + \"ter method\", token.value);\n        } else if (isStatic && token.value === \"prototype\") {\n          error(\"E049\", token, \"static class \" + accessorType + \"ter method\", token.value);\n        }\n      } else {\n        accessorType = null;\n      }\n\n      switch (token.value) {\n        case \";\":\n          warning(\"W032\", token);\n          advance();\n          break;\n\n        case \"constructor\":\n          if (isStatic) {\n            // treat like a regular method -- static methods can be called 'constructor'\n            name = propertyName(context);\n            saveProperty(props, name, token, true, isStatic);\n            doMethod(classToken, context, name, inGenerator);\n          } else {\n            if (inGenerator || context & prodParams.preAsync) {\n              error(\"E024\", token, token.value);\n            } else if (hasConstructor) {\n              /* istanbul ignore next */\n              error(\"E024\", token, token.value);\n            } else {\n              hasConstructor = !accessorType && !isStatic;\n            }\n\n            advance();\n            doMethod(classToken, context, state.nameStack.infer());\n          }\n\n          break;\n\n        case \"[\":\n          name = computedPropertyName(context);\n          doMethod(classToken, context, name, inGenerator); // We don't check names (via calling saveProperty()) of computed expressions like [\"Symbol.iterator\"]()\n\n          break;\n\n        default:\n          name = propertyName(context);\n\n          if (name === undefined) {\n            error(\"E024\", token, token.value);\n            advance();\n            break;\n          }\n\n          if (accessorType) {\n            saveAccessor(accessorType, props, name, token, true, isStatic);\n            name = state.nameStack.infer();\n          } else {\n            if (isStatic && name === \"prototype\") {\n              error(\"E049\", token, \"static class method\", name);\n            }\n\n            saveProperty(props, name, token, true, isStatic);\n          }\n\n          doMethod(classToken, context, name, inGenerator);\n          break;\n      }\n    }\n\n    advance(\"}\");\n    checkProperties(props);\n    state.inClassBody = false;\n    state.funct[\"(scope)\"].unstack();\n  }\n\n  function doMethod(classToken, context, name, generator) {\n    if (generator) {\n      if (!state.inES6()) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n    }\n\n    if (state.tokens.next.value !== \"(\") {\n      error(\"E054\", state.tokens.next, state.tokens.next.value);\n      advance();\n\n      if (state.tokens.next.value === \"{\") {\n        // manually cheating the test \"invalidClasses\", which asserts this particular behavior when a class is misdefined.\n        advance();\n\n        if (state.tokens.next.value === \"}\") {\n          warning(\"W116\", state.tokens.next, \"(\", state.tokens.next.value);\n          advance();\n          identifier(context);\n          advance();\n        }\n        /* istanbul ignore next */\n\n\n        return;\n      } else {\n        while (state.tokens.next.value !== \"(\") {\n          advance();\n        }\n      }\n    }\n\n    doFunction(context, {\n      name: name,\n      type: generator ? \"generator\" : null,\n      isMethod: true,\n      statement: classToken\n    });\n  }\n\n  prefix(\"void\").exps = true;\n  infix(\".\", function (context, left, that) {\n    var m = identifier(context, true);\n\n    if (typeof m === \"string\") {\n      countMember(m);\n    }\n\n    that.left = left;\n    that.right = m;\n\n    if (m && m === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n      if (state.option.noarg) warning(\"W059\", left, m);else if (state.isStrict()) error(\"E008\");\n    } else if (!state.option.evil && left && left.value === \"document\" && (m === \"write\" || m === \"writeln\")) {\n      warning(\"W060\", left);\n    }\n\n    if (!state.option.evil && (m === \"eval\" || m === \"execScript\")) {\n      if (isGlobalEval(left, state)) {\n        warning(\"W061\");\n      }\n    }\n\n    return that;\n  }, 160, true);\n  infix(\"?.\", function (context, left, that) {\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"Optional chaining\", \"11\");\n    }\n\n    if (checkPunctuator(state.tokens.next, \"[\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n    } else if (checkPunctuator(state.tokens.next, \"(\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n      that.exps = true;\n    } else {\n      state.syntax[\".\"].led.call(that, context, left);\n    }\n\n    if (state.tokens.next.type === \"(template)\") {\n      error(\"E024\", state.tokens.next, \"`\");\n    }\n\n    return that;\n  }, 160, true);\n  /**\n   * Determine if a CallExpression's \"base\" is a type of expression commonly\n   * used in this position.\n   *\n   * @param {token} token - token describing the \"base\" of the CallExpression\n   * @returns {boolean}\n   */\n\n  function isTypicalCallExpression(token) {\n    return token.identifier || token.id === \".\" || token.id === \"[\" || token.id === \"=>\" || token.id === \"(\" || token.id === \"&&\" || token.id === \"||\" || token.id === \"?\" || token.id === \"async\" || token.id === \"?.\" || state.inES6() && token[\"(name)\"];\n  }\n\n  infix(\"(\", function (context, left, that) {\n    if (state.option.immed && left && !left.immed && left.id === \"function\") {\n      warning(\"W062\");\n    }\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) && !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    var n = 0;\n    var p = [];\n\n    if (left) {\n      if (left.type === \"(identifier)\") {\n        var newcapRe = /^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/;\n        var newcapIgnore = [\"Array\", \"Boolean\", \"Date\", \"Error\", \"Function\", \"Number\", \"Object\", \"RegExp\", \"String\", \"Symbol\"];\n\n        if (newcapRe.test(left.value) && newcapIgnore.indexOf(left.value) === -1) {\n          if (left.value === \"Math\") {\n            /* istanbul ignore next */\n            warning(\"W063\", left);\n          } else if (state.option.newcap) {\n            warning(\"W064\", left);\n          }\n        }\n      }\n    }\n\n    if (state.tokens.next.id !== \")\") {\n      for (;;) {\n        spreadrest(\"spread\");\n        p[p.length] = expression(context, 10);\n        n += 1;\n\n        if (state.tokens.next.id !== \",\") {\n          break;\n        }\n\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n\n        if (state.tokens.next.id === \")\") {\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"Trailing comma in arguments lists\", \"8\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    advance(\")\");\n\n    if (typeof left === \"object\") {\n      if (!state.inES5() && left.value === \"parseInt\" && n === 1) {\n        warning(\"W065\", state.tokens.curr);\n      }\n\n      if (!state.option.evil) {\n        if (left.value === \"eval\" || left.value === \"Function\" || left.value === \"execScript\") {\n          warning(\"W061\", left); // This conditional expression was initially implemented with a typo\n          // which prevented the branch's execution in all cases. While\n          // enabling the code will produce behavior that is consistent with\n          // the other forms of code evaluation that follow, such a change is\n          // also technically incompatable with prior versions of JSHint (due\n          // to the fact that the behavior was never formally documented). This\n          // branch should be enabled as part of a major release.\n          //if (p[0] && p[0].id === \"(string)\") {\n          //  addEvalCode(left, p[0]);\n          //}\n        } else if (p[0] && p[0].id === \"(string)\" && (left.value === \"setTimeout\" || left.value === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]); // window.setTimeout/setInterval\n        } else if (p[0] && p[0].id === \"(string)\" && left.value === \".\" && left.left.value === \"window\" && (left.right === \"setTimeout\" || left.right === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n        }\n      }\n\n      if (!isTypicalCallExpression(left)) {\n        warning(\"W067\", that);\n      }\n    }\n\n    that.left = left;\n    return that;\n  }, 155, true).exps = true;\n\n  function peekThroughParens(parens) {\n    var pn = state.tokens.next;\n    var i = -1;\n    var pn1;\n\n    do {\n      if (pn.value === \"(\") {\n        parens += 1;\n      } else if (pn.value === \")\") {\n        parens -= 1;\n      }\n\n      i += 1;\n      pn1 = pn;\n      pn = peek(i);\n    } while (!(parens === 0 && pn1.value === \")\") && pn.type !== \"(end)\");\n\n    return pn;\n  }\n\n  prefix(\"(\", function (context, rbp) {\n    var ret, triggerFnExpr, first, last;\n    var opening = state.tokens.curr;\n    var preceeding = state.tokens.prev;\n    var isNecessary = !state.option.singleGroups;\n    var pn = peekThroughParens(1);\n\n    if (state.tokens.next.id === \"function\") {\n      triggerFnExpr = state.tokens.next.immed = true;\n    } // If the balanced grouping operator is followed by a \"fat arrow\", the\n    // current token marks the beginning of a \"fat arrow\" function and parsing\n    // should proceed accordingly.\n\n\n    if (pn.value === \"=>\") {\n      pn.funct = doFunction(context, {\n        type: \"arrow\",\n        parsedOpening: true\n      });\n      return pn;\n    } // The ECMA262 grammar requires an expression between the \"opening\n    // parenthesis\" and \"close parenthesis\" tokens of the grouping operator.\n    // However, the \"ignore\" directive is commonly used to inject values that\n    // are not included in the token stream. For example:\n    //\n    //     return (\n    //       /*jshint ignore:start */\n    //       <div></div>\n    //       /*jshint ignore:end */\n    //     );\n    //\n    // The \"empty\" grouping operator is permitted in order to tolerate this\n    // pattern.\n\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    ret = expression(context, 0);\n    advance(\")\", this);\n\n    if (!ret) {\n      return;\n    }\n\n    ret.paren = true;\n\n    if (state.option.immed && ret && ret.id === \"function\") {\n      if (state.tokens.next.id !== \"(\" && state.tokens.next.id !== \".\" && state.tokens.next.id !== \"[\") {\n        warning(\"W068\", this);\n      }\n    }\n\n    if (ret.id === \",\") {\n      first = ret.left;\n\n      while (first.id === \",\") {\n        first = first.left;\n      }\n\n      last = ret.right;\n    } else {\n      first = last = ret;\n\n      if (!isNecessary) {\n        // async functions are identified after parsing due to the complexity\n        // of disambiguating the `async` keyword.\n        if (!triggerFnExpr) {\n          triggerFnExpr = ret.id === \"async\";\n        }\n\n        isNecessary = // Used to distinguish from an ExpressionStatement which may not\n        // begin with the `{` and `function` tokens\n        opening.beginsStmt && (ret.id === \"{\" || triggerFnExpr) || // Used to signal that a function expression is being supplied to\n        // some other operator.\n        triggerFnExpr && ( // For parenthesis wrapping a function expression to be considered\n        // necessary, the grouping operator should be the left-hand-side of\n        // some other operator--either within the parenthesis or directly\n        // following them.\n        !isEndOfExpr() || state.tokens.prev.id !== \"}\") || // Used to demarcate an arrow function as the left-hand side of some\n        // operator.\n        ret.id === \"=>\" && !isEndOfExpr() || // Used as the return value of a single-statement arrow function\n        ret.id === \"{\" && preceeding.id === \"=>\" || // Used to cover a unary expression as the left-hand side of the\n        // exponentiation operator\n        beginsUnaryExpression(ret) && state.tokens.next.id === \"**\" || // Used to cover a logical operator as the right-hand side of the\n        // nullish coalescing operator\n        preceeding.id === \"??\" && (ret.id === \"&&\" || ret.id === \"||\") || // Used to delineate an integer number literal from a dereferencing\n        // punctuator (otherwise interpreted as a decimal point)\n        ret.type === \"(number)\" && checkPunctuator(pn, \".\") && /^\\d+$/.test(ret.value) || // Used to wrap object destructuring assignment\n        opening.beginsStmt && ret.id === \"=\" && ret.left.id === \"{\" || // Used to allow optional chaining with other language features which\n        // are otherwise restricted.\n        ret.id === \"?.\" && (preceeding.id === \"new\" || state.tokens.next.type === \"(template)\");\n      }\n    } // The operator may be necessary to override the default binding power of\n    // neighboring operators (whenever there is an operator in use within the\n    // first expression *or* the current group contains multiple expressions)\n\n\n    if (!isNecessary && (isOperator(first) || first !== last)) {\n      isNecessary = rbp > first.lbp || rbp > 0 && rbp === first.lbp || !isEndOfExpr() && last.rbp < state.tokens.next.lbp;\n    }\n\n    if (!isNecessary) {\n      warning(\"W126\", opening);\n    }\n\n    return ret;\n  });\n  application(\"=>\").rbp = 161;\n  infix(\"[\", function (context, left, that) {\n    var e, s, canUseDot;\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) && !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    e = expression(context & ~prodParams.noin, 0);\n\n    if (e && e.type === \"(string)\") {\n      if (!state.option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n        if (isGlobalEval(left, state)) {\n          warning(\"W061\");\n        }\n      }\n\n      countMember(e.value);\n\n      if (!state.option.sub && reg.identifier.test(e.value)) {\n        s = state.syntax[e.value];\n\n        if (s) {\n          canUseDot = !isReserved(context, s);\n        } else {\n          // This branch exists to preserve legacy behavior with version 2.9.5\n          // and earlier. In those releases, `eval` and `arguments` were\n          // incorrectly interpreted as reserved keywords, so Member\n          // Expressions such as `object[\"eval\"]` did not trigger warning W069.\n          //\n          // TODO: Remove in JSHint 3\n          canUseDot = e.value !== \"eval\" && e.value !== \"arguments\";\n        }\n\n        if (canUseDot) {\n          warning(\"W069\", state.tokens.prev, e.value);\n        }\n      }\n    }\n\n    advance(\"]\", that);\n\n    if (e && e.value === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    that.left = left;\n    that.right = e;\n    return that;\n  }, 160, true);\n\n  function comprehensiveArrayExpression(context) {\n    var res = {};\n    res.exps = true;\n    state.funct[\"(comparray)\"].stack(); // Handle reversed for expressions, used in spidermonkey\n\n    var reversed = false;\n\n    if (state.tokens.next.value !== \"for\") {\n      reversed = true;\n\n      if (!state.inMoz()) {\n        warning(\"W116\", state.tokens.next, \"for\", state.tokens.next.value);\n      }\n\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"for\");\n\n    if (state.tokens.next.value === \"each\") {\n      advance(\"each\");\n\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    advance(\"(\");\n    state.funct[\"(comparray)\"].setState(\"define\");\n    res.left = expression(context, 130);\n\n    if (_.includes([\"in\", \"of\"], state.tokens.next.value)) {\n      advance();\n    } else {\n      /* istanbul ignore next */\n      error(\"E045\", state.tokens.curr);\n    }\n\n    state.funct[\"(comparray)\"].setState(\"generate\");\n    expression(context, 10);\n    advance(\")\");\n\n    if (state.tokens.next.value === \"if\") {\n      advance(\"if\");\n      advance(\"(\");\n      state.funct[\"(comparray)\"].setState(\"filter\");\n      expression(context, 10);\n      advance(\")\");\n    }\n\n    if (!reversed) {\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"]\");\n    state.funct[\"(comparray)\"].unstack();\n    return res;\n  }\n\n  prefix(\"[\", function (context) {\n    var blocktype = lookupBlockType();\n\n    if (blocktype.isCompArray) {\n      if (!state.option.esnext && !state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"array comprehension\");\n      }\n\n      return comprehensiveArrayExpression(context);\n    } else if (blocktype.isDestAssign) {\n      this.destructAssign = destructuringPattern(context, {\n        openingParsed: true,\n        assignment: true\n      });\n      return this;\n    }\n\n    var b = !sameLine(state.tokens.curr, state.tokens.next);\n    this.first = [];\n\n    if (b) {\n      indent += state.option.indent;\n\n      if (state.tokens.next.from === indent + state.option.indent) {\n        /* istanbul ignore next */\n        indent += state.option.indent;\n      }\n    }\n\n    while (state.tokens.next.id !== \"(end)\") {\n      while (state.tokens.next.id === \",\") {\n        if (!state.option.elision) {\n          if (!state.inES5()) {\n            // Maintain compat with old options --- ES5 mode without\n            // elision=true will warn once per comma\n            warning(\"W070\");\n          } else {\n            warning(\"W128\");\n\n            do {\n              advance(\",\");\n            } while (state.tokens.next.id === \",\");\n\n            continue;\n          }\n        }\n\n        advance(\",\");\n      }\n\n      if (state.tokens.next.id === \"]\") {\n        break;\n      }\n\n      spreadrest(\"spread\");\n      this.first.push(expression(context, 10));\n\n      if (state.tokens.next.id === \",\") {\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n\n        if (state.tokens.next.id === \"]\" && !state.inES5()) {\n          warning(\"W070\", state.tokens.curr);\n          break;\n        }\n      } else {\n        if (state.option.trailingcomma && state.inES5()) {\n          warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n\n        break;\n      }\n    }\n\n    if (b) {\n      indent -= state.option.indent;\n    }\n\n    advance(\"]\", this);\n    return this;\n  });\n\n  function isMethod() {\n    return !!state.funct[\"(method)\"];\n  }\n  /**\n   * Retrieve the value of the next token if it is a valid LiteralPropertyName\n   * and optionally advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n\n\n  function propertyName(context) {\n    var id = optionalidentifier(context, true);\n\n    if (!id) {\n      if (state.tokens.next.id === \"(string)\") {\n        id = state.tokens.next.value;\n        advance();\n      } else if (state.tokens.next.id === \"(number)\") {\n        id = state.tokens.next.value.toString();\n        advance();\n      }\n    }\n\n    if (id === \"hasOwnProperty\") {\n      warning(\"W001\");\n    }\n\n    return id;\n  }\n  /**\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand.\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed.\n   *\n   * @returns {{ arity: number, params: Array.<string>, isSimple: boolean }}\n   */\n\n\n  function functionparams(context, options) {\n    var next;\n    var paramsIds = [];\n    var ident;\n    var tokens = [];\n    var t;\n    var pastDefault = false;\n    var pastRest = false;\n    var arity = 0;\n    var loneArg = options && options.loneArg;\n    var hasDestructuring = false;\n\n    if (loneArg && loneArg.identifier === true) {\n      state.funct[\"(scope)\"].addParam(loneArg.value, loneArg);\n      return {\n        arity: 1,\n        params: [loneArg.value],\n        isSimple: true\n      };\n    }\n\n    next = state.tokens.next;\n\n    if (!options || !options.parsedOpening) {\n      advance(\"(\");\n    }\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    function addParam(addParamArgs) {\n      state.funct[\"(scope)\"].addParam.apply(state.funct[\"(scope)\"], addParamArgs);\n    }\n\n    for (;;) {\n      arity++; // are added to the param scope\n\n      var currentParams = [];\n      pastRest = spreadrest(\"rest\");\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.id)) {\n        hasDestructuring = true;\n        tokens = destructuringPattern(context);\n\n        for (t in tokens) {\n          t = tokens[t];\n\n          if (t.id) {\n            paramsIds.push(t.id);\n            currentParams.push([t.id, t.token]);\n          }\n        }\n      } else {\n        ident = identifier(context);\n\n        if (ident) {\n          paramsIds.push(ident);\n          currentParams.push([ident, state.tokens.curr]);\n        } else {\n          // Skip invalid parameter.\n          while (!checkPunctuators(state.tokens.next, [\",\", \")\"])) {\n            advance();\n          }\n        }\n      } // It is valid to have a regular argument after a default argument\n      // since undefined can be used for missing parameters. Still warn as it is\n      // a possible code smell.\n\n\n      if (pastDefault) {\n        if (state.tokens.next.id !== \"=\") {\n          error(\"W138\", state.tokens.curr);\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        if (!state.inES6()) {\n          warning(\"W119\", state.tokens.next, \"default parameters\", \"6\");\n        }\n\n        if (pastRest) {\n          error(\"E062\", state.tokens.next);\n        }\n\n        advance(\"=\");\n        pastDefault = true;\n        expression(context, 10);\n      } // now we have evaluated the default expression, add the variable to the param scope\n\n\n      currentParams.forEach(addParam);\n\n      if (state.tokens.next.id === \",\") {\n        if (pastRest) {\n          warning(\"W131\", state.tokens.next);\n        }\n\n        advance(\",\");\n        checkComma({\n          allowTrailing: true\n        });\n      }\n\n      if (state.tokens.next.id === \")\") {\n        if (state.tokens.curr.id === \",\" && !state.inES8()) {\n          warning(\"W119\", state.tokens.curr, \"Trailing comma in function parameters\", \"8\");\n        }\n\n        advance(\")\", next);\n        return {\n          arity: arity,\n          params: paramsIds,\n          isSimple: !hasDestructuring && !pastRest && !pastDefault\n        };\n      }\n    }\n  }\n  /**\n   * Factory function for creating objects used to track statistics of function\n   * literals.\n   *\n   * @param {string} name - the identifier name to associate with the function\n   * @param {object} [token] - token responsible for creating the function\n   *                           object\n   * @param {object} [overwrites] - a collection of properties that should\n   *                                override the corresponding default value of\n   *                                the new \"functor\" object\n   */\n\n\n  function functor(name, token, overwrites) {\n    var funct = {\n      \"(name)\": name,\n      \"(breakage)\": 0,\n      \"(loopage)\": 0,\n      // The strictness of the function body is tracked via a dedicated\n      // property (as opposed to via the global `state` object) so that the\n      // value can be referenced after the body has been fully parsed (i.e.\n      // when validating the identifier used in function declarations and\n      // function expressions).\n      \"(isStrict)\": \"unknown\",\n      \"(global)\": false,\n      \"(line)\": null,\n      \"(character)\": null,\n      \"(metrics)\": null,\n      \"(statement)\": null,\n      \"(context)\": null,\n      \"(scope)\": null,\n      \"(comparray)\": null,\n      \"(yielded)\": null,\n      \"(arrow)\": null,\n      \"(async)\": null,\n      \"(params)\": null\n    };\n\n    if (token) {\n      _.extend(funct, {\n        \"(line)\": token.line,\n        \"(character)\": token.character,\n        \"(metrics)\": createMetrics(token)\n      });\n    }\n\n    _.extend(funct, overwrites);\n\n    if (funct[\"(context)\"]) {\n      funct[\"(scope)\"] = funct[\"(context)\"][\"(scope)\"];\n      funct[\"(comparray)\"] = funct[\"(context)\"][\"(comparray)\"];\n    }\n\n    return funct;\n  }\n  /**\n   * Determine if the parser has begun parsing executable code.\n   *\n   * @param {Token} funct - The current \"functor\" token\n   *\n   * @returns {boolean}\n   */\n\n\n  function hasParsedCode(funct) {\n    return funct[\"(global)\"] && !funct[\"(verb)\"];\n  }\n  /**\n   * This function is used as both a null-denotation method *and* a\n   * left-denotation method, meaning the first parameter is overloaded.\n   */\n\n\n  function doTemplateLiteral(context, leftOrRbp) {\n    // ASSERT: this.type === \"(template)\"\n    // jshint validthis: true\n    var ctx = this.context;\n    var noSubst = this.noSubst;\n    var depth = this.depth;\n    var left = typeof leftOrRbp === \"number\" ? null : leftOrRbp;\n\n    if (!noSubst) {\n      while (!end()) {\n        if (!state.tokens.next.template || state.tokens.next.depth > depth) {\n          expression(context, 0); // should probably have different rbp?\n        } else {\n          // skip template start / middle\n          advance();\n        }\n      }\n    }\n\n    return {\n      id: \"(template)\",\n      type: \"(template)\",\n      tag: left\n    };\n\n    function end() {\n      if (state.tokens.curr.template && state.tokens.curr.tail && state.tokens.curr.context === ctx) {\n        /* istanbul ignore next */\n        return true;\n      }\n\n      var complete = state.tokens.next.template && state.tokens.next.tail && state.tokens.next.context === ctx;\n      if (complete) advance();\n      return complete || state.tokens.next.isUnclosed;\n    }\n  }\n  /**\n   * Parse a function literal.\n   *\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {string} [options.name] The identifier belonging to the function (if\n   *                                any)\n   * @param {token} [options.statement] The statement that triggered creation\n   *                                    of the current function.\n   * @param {string} [options.type] If specified, either \"generator\" or \"arrow\"\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed\n   * @param {string} [options.classExprBinding] Define a function with this\n   *                                            identifier in the new function's\n   *                                            scope, mimicking the bahavior of\n   *                                            class expression names within\n   *                                            the body of member functions.\n   */\n\n\n  function doFunction(context, options) {\n    var f, token, name, statement, classExprBinding, isGenerator, isArrow, isMethod, ignoreLoopFunc;\n    var oldOption = state.option;\n    var oldIgnored = state.ignored;\n    var isAsync = context & prodParams.preAsync;\n\n    if (options) {\n      name = options.name;\n      statement = options.statement;\n      classExprBinding = options.classExprBinding;\n      isGenerator = options.type === \"generator\";\n      isArrow = options.type === \"arrow\";\n      isMethod = options.isMethod;\n      ignoreLoopFunc = options.ignoreLoopFunc;\n    }\n\n    context &= ~prodParams.noin;\n    context &= ~prodParams.tryClause;\n\n    if (isAsync) {\n      context |= prodParams.async;\n    } else {\n      context &= ~prodParams.async;\n    }\n\n    if (isGenerator) {\n      context |= prodParams.yield;\n    } else if (!isArrow) {\n      context &= ~prodParams.yield;\n    }\n\n    context &= ~prodParams.preAsync;\n    state.option = Object.create(state.option);\n    state.ignored = Object.create(state.ignored);\n    state.funct = functor(name || state.nameStack.infer(), state.tokens.next, {\n      \"(statement)\": statement,\n      \"(context)\": state.funct,\n      \"(arrow)\": isArrow,\n      \"(method)\": isMethod,\n      \"(async)\": isAsync\n    });\n    f = state.funct;\n    token = state.tokens.curr;\n    functions.push(state.funct); // So that the function is available to itself and referencing itself is not\n    // seen as a closure, add the function name to a new scope, but do not\n    // test for unused (unused: false)\n    // it is a new block scope so that params can override it, it can be block scoped\n    // but declarations inside the function don't cause already declared error\n\n    state.funct[\"(scope)\"].stack(\"functionouter\");\n    var internallyAccessibleName = !isMethod && (name || classExprBinding);\n\n    if (internallyAccessibleName) {\n      state.funct[\"(scope)\"].block.add(internallyAccessibleName, classExprBinding ? \"class\" : \"function\", state.tokens.curr, false);\n    }\n\n    if (!isArrow) {\n      state.funct[\"(scope)\"].funct.add(\"arguments\", \"var\", token, false);\n    } // create the param scope (params added in functionparams)\n\n\n    state.funct[\"(scope)\"].stack(\"functionparams\");\n    var paramsInfo = functionparams(context, options);\n\n    if (paramsInfo) {\n      state.funct[\"(params)\"] = paramsInfo.params;\n      state.funct[\"(hasSimpleParams)\"] = paramsInfo.isSimple;\n      state.funct[\"(metrics)\"].arity = paramsInfo.arity;\n      state.funct[\"(metrics)\"].verifyMaxParametersPerFunction();\n    } else {\n      state.funct[\"(params)\"] = [];\n      state.funct[\"(metrics)\"].arity = 0;\n      state.funct[\"(hasSimpleParams)\"] = true;\n    }\n\n    if (isArrow) {\n      context &= ~prodParams.yield;\n\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"arrow function syntax (=>)\", \"6\");\n      }\n\n      if (!options.loneArg) {\n        advance(\"=>\");\n      }\n    }\n\n    block(context, false, true, true, isArrow);\n\n    if (!state.option.noyield && isGenerator && !state.funct[\"(yielded)\"]) {\n      warning(\"W124\", state.tokens.curr);\n    }\n\n    state.funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n    state.funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n    state.funct[\"(unusedOption)\"] = state.option.unused;\n    state.option = oldOption;\n    state.ignored = oldIgnored;\n    state.funct[\"(last)\"] = state.tokens.curr.line;\n    state.funct[\"(lastcharacter)\"] = state.tokens.curr.character; // unstack the params scope\n\n    state.funct[\"(scope)\"].unstack(); // also does usage and label checks\n    // unstack the function outer stack\n\n    state.funct[\"(scope)\"].unstack();\n    state.funct = state.funct[\"(context)\"];\n\n    if (!ignoreLoopFunc && !state.option.loopfunc && state.funct[\"(loopage)\"]) {\n      // If the function we just parsed accesses any non-local variables\n      // trigger a warning. Otherwise, the function is safe even within\n      // a loop.\n      if (f[\"(outerMutables)\"]) {\n        warning(\"W083\", token, f[\"(outerMutables)\"].join(\", \"));\n      }\n    }\n\n    return f;\n  }\n\n  function createMetrics(functionStartToken) {\n    return {\n      statementCount: 0,\n      nestedBlockDepth: -1,\n      ComplexityCount: 1,\n      arity: 0,\n      verifyMaxStatementsPerFunction: function verifyMaxStatementsPerFunction() {\n        if (state.option.maxstatements && this.statementCount > state.option.maxstatements) {\n          warning(\"W071\", functionStartToken, this.statementCount);\n        }\n      },\n      verifyMaxParametersPerFunction: function verifyMaxParametersPerFunction() {\n        if (_.isNumber(state.option.maxparams) && this.arity > state.option.maxparams) {\n          warning(\"W072\", functionStartToken, this.arity);\n        }\n      },\n      verifyMaxNestedBlockDepthPerFunction: function verifyMaxNestedBlockDepthPerFunction() {\n        if (state.option.maxdepth && this.nestedBlockDepth > 0 && this.nestedBlockDepth === state.option.maxdepth + 1) {\n          warning(\"W073\", null, this.nestedBlockDepth);\n        }\n      },\n      verifyMaxComplexityPerFunction: function verifyMaxComplexityPerFunction() {\n        var max = state.option.maxcomplexity;\n        var cc = this.ComplexityCount;\n\n        if (max && cc > max) {\n          warning(\"W074\", functionStartToken, cc);\n        }\n      }\n    };\n  }\n\n  function increaseComplexityCount() {\n    state.funct[\"(metrics)\"].ComplexityCount += 1;\n  } // Parse assignments that were found instead of conditionals.\n  // For example: if (a = 1) { ... }\n\n\n  function checkCondAssignment(token) {\n    if (!token || token.paren) {\n      return;\n    }\n\n    if (token.id === \",\") {\n      checkCondAssignment(token.right);\n      return;\n    }\n\n    switch (token.id) {\n      case \"=\":\n      case \"+=\":\n      case \"-=\":\n      case \"*=\":\n      case \"%=\":\n      case \"&=\":\n      case \"|=\":\n      case \"^=\":\n      case \"/=\":\n        if (!state.option.boss) {\n          warning(\"W084\", token);\n        }\n\n    }\n  }\n  /**\n   * Validate the properties defined within an object literal or class body.\n   * See the `saveAccessor` and `saveProperty` functions for more detail.\n   *\n   * @param {object} props - Collection of objects describing the properties\n   *                         encountered\n   */\n\n\n  function checkProperties(props) {\n    // Check for lonely setters if in the ES5 mode.\n    if (state.inES5()) {\n      for (var name in props) {\n        if (props[name] && props[name].setterToken && !props[name].getterToken && !props[name].static) {\n          warning(\"W078\", props[name].setterToken);\n        }\n      }\n    }\n  }\n\n  function metaProperty(context, name, c) {\n    if (checkPunctuator(state.tokens.next, \".\")) {\n      var left = state.tokens.curr.id;\n      advance(\".\");\n      var id = identifier(context);\n      state.tokens.curr.isMetaProperty = true;\n\n      if (name !== id) {\n        error(\"E057\", state.tokens.prev, left, id);\n      } else {\n        c();\n      }\n\n      return state.tokens.curr;\n    }\n  } //object literals\n\n\n  (function (x) {\n    x.nud = function (context) {\n      var b,\n          f,\n          i,\n          params,\n          t,\n          isGeneratorMethod = false,\n          nextVal;\n      var props = Object.create(null); // All properties, including accessors\n\n      var isAsyncMethod = false;\n      b = !sameLine(state.tokens.curr, state.tokens.next);\n\n      if (b) {\n        indent += state.option.indent;\n\n        if (state.tokens.next.from === indent + state.option.indent) {\n          /* istanbul ignore next */\n          indent += state.option.indent;\n        }\n      }\n\n      var blocktype = lookupBlockType();\n\n      if (blocktype.isDestAssign) {\n        this.destructAssign = destructuringPattern(context, {\n          openingParsed: true,\n          assignment: true\n        });\n        return this;\n      }\n\n      state.inObjectBody = true;\n\n      for (;;) {\n        if (state.tokens.next.id === \"}\") {\n          break;\n        }\n\n        nextVal = state.tokens.next.value;\n\n        if (state.tokens.next.identifier && (peekIgnoreEOL().id === \",\" || peekIgnoreEOL().id === \"}\")) {\n          if (!state.inES6()) {\n            warning(\"W104\", state.tokens.next, \"object short notation\", \"6\");\n          }\n\n          t = expression(context, 10);\n          i = t && t.value;\n\n          if (t) {\n            saveProperty(props, i, t);\n          }\n        } else if (peek().id !== \":\" && (nextVal === \"get\" || nextVal === \"set\")) {\n          advance(nextVal);\n\n          if (!state.inES5()) {\n            error(\"E034\");\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n          } else {\n            i = propertyName(context); // ES6 allows for get() {...} and set() {...} method\n            // definition shorthand syntax, so we don't produce an error\n            // if linting ECMAScript 6 code.\n\n            if (!i && !state.inES6()) {\n              error(\"E035\");\n            }\n          } // We don't want to save this getter unless it's an actual getter\n          // and not an ES6 concise method\n\n\n          if (i) {\n            saveAccessor(nextVal, props, i, state.tokens.curr);\n          }\n\n          t = state.tokens.next;\n          f = doFunction(context, {\n            isMethod: true\n          });\n          params = f[\"(params)\"]; // Don't warn about getter/setter pairs if this is an ES6 concise method\n\n          if (nextVal === \"get\" && i && params.length) {\n            warning(\"W076\", t, params[0], i);\n          } else if (nextVal === \"set\" && i && f[\"(metrics)\"].arity !== 1) {\n            warning(\"W077\", t, i);\n          }\n        } else if (spreadrest(\"spread\")) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object spread property\", \"9\");\n          }\n\n          expression(context, 10);\n        } else {\n          if (state.tokens.next.id === \"async\" && !checkPunctuators(peek(), [\"(\", \":\"])) {\n            if (!state.inES8()) {\n              warning(\"W119\", state.tokens.next, \"async functions\", \"8\");\n            }\n\n            isAsyncMethod = true;\n            advance();\n            nolinebreak(state.tokens.curr);\n          } else {\n            isAsyncMethod = false;\n          }\n\n          if (state.tokens.next.value === \"*\" && state.tokens.next.type === \"(punctuator)\") {\n            if (isAsyncMethod && !state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            } else if (!state.inES6()) {\n              warning(\"W104\", state.tokens.next, \"generator functions\", \"6\");\n            }\n\n            advance(\"*\");\n            isGeneratorMethod = true;\n          } else {\n            isGeneratorMethod = false;\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n            state.nameStack.set(i);\n          } else {\n            state.nameStack.set(state.tokens.next);\n            i = propertyName(context);\n            saveProperty(props, i, state.tokens.next);\n\n            if (typeof i !== \"string\") {\n              break;\n            }\n          }\n\n          if (state.tokens.next.value === \"(\") {\n            if (!state.inES6()) {\n              warning(\"W104\", state.tokens.curr, \"concise methods\", \"6\");\n            }\n\n            doFunction(isAsyncMethod ? context | prodParams.preAsync : context, {\n              isMethod: true,\n              type: isGeneratorMethod ? \"generator\" : null\n            });\n          } else {\n            advance(\":\");\n            expression(context, 10);\n          }\n        }\n\n        countMember(i);\n\n        if (state.tokens.next.id === \",\") {\n          advance(\",\");\n          checkComma({\n            allowTrailing: true,\n            property: true\n          });\n\n          if (state.tokens.next.id === \",\") {\n            /* istanbul ignore next */\n            warning(\"W070\", state.tokens.curr);\n          } else if (state.tokens.next.id === \"}\" && !state.inES5()) {\n            warning(\"W070\", state.tokens.curr);\n          }\n        } else {\n          if (state.option.trailingcomma && state.inES5()) {\n            warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n          }\n\n          break;\n        }\n      }\n\n      if (b) {\n        indent -= state.option.indent;\n      }\n\n      advance(\"}\", this);\n      checkProperties(props);\n      state.inObjectBody = false;\n      return this;\n    };\n\n    x.fud = function () {\n      /* istanbul ignore next */\n      error(\"E036\", state.tokens.curr);\n    };\n  })(delim(\"{\"));\n\n  function destructuringPattern(context, options) {\n    var isAssignment = options && options.assignment;\n    context &= ~prodParams.noin;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, isAssignment ? \"destructuring assignment\" : \"destructuring binding\", \"6\");\n    }\n\n    return destructuringPatternRecursive(context, options);\n  }\n\n  function destructuringPatternRecursive(context, options) {\n    var ids, idx;\n    var identifiers = [];\n    var openingParsed = options && options.openingParsed;\n    var isAssignment = options && options.assignment;\n    var recursiveOptions = isAssignment ? {\n      assignment: isAssignment\n    } : null;\n    var firstToken = openingParsed ? state.tokens.curr : state.tokens.next;\n\n    var nextInnerDE = function nextInnerDE() {\n      var ident;\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        ids = destructuringPatternRecursive(context, recursiveOptions);\n\n        for (idx = 0; idx < ids.length; idx++) {\n          identifiers.push({\n            id: ids[idx].id,\n            token: ids[idx].token\n          });\n        }\n      } else if (checkPunctuator(state.tokens.next, \",\")) {\n        identifiers.push({\n          id: null,\n          token: state.tokens.curr\n        });\n      } else if (checkPunctuator(state.tokens.next, \"(\")) {\n        advance(\"(\");\n        nextInnerDE();\n        advance(\")\");\n      } else {\n        if (isAssignment) {\n          var assignTarget = expression(context, 20);\n\n          if (assignTarget) {\n            checkLeftSideAssign(context, assignTarget); // if the target was a simple identifier, add it to the list to return\n\n            if (assignTarget.identifier) {\n              ident = assignTarget.value;\n            }\n          }\n        } else {\n          ident = identifier(context);\n        }\n\n        if (ident) {\n          identifiers.push({\n            id: ident,\n            token: state.tokens.curr\n          });\n        }\n      }\n    };\n\n    var assignmentProperty = function assignmentProperty(context) {\n      var id, expr;\n\n      if (checkPunctuator(state.tokens.next, \"[\")) {\n        advance(\"[\");\n        expression(context, 10);\n        advance(\"]\");\n        advance(\":\");\n        nextInnerDE();\n      } else if (state.tokens.next.id === \"(string)\" || state.tokens.next.id === \"(number)\") {\n        advance();\n        advance(\":\");\n        nextInnerDE();\n      } else {\n        // this id will either be the property name or the property name and the assigning identifier\n        var isRest = spreadrest(\"rest\");\n\n        if (isRest) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object rest property\", \"9\");\n          } // Due to visual symmetry with the array rest property (and the early\n          // design of the language feature), developers may mistakenly assume\n          // any expression is valid in this position. If the next token is not\n          // an identifier, attempt to parse an expression and issue an error.\n          // order to recover more gracefully from this condition.\n\n\n          if (state.tokens.next.type === \"(identifier)\") {\n            id = identifier(context);\n          } else {\n            expr = expression(context, 10);\n            error(\"E030\", expr, expr.value);\n          }\n        } else {\n          id = identifier(context);\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \":\")) {\n          advance(\":\");\n          nextInnerDE();\n        } else if (id) {\n          // in this case we are assigning (not declaring), so check assignment\n          if (isAssignment) {\n            checkLeftSideAssign(context, state.tokens.curr);\n          }\n\n          identifiers.push({\n            id: id,\n            token: state.tokens.curr\n          });\n        }\n\n        if (isRest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n        }\n      }\n    };\n\n    var id, value;\n\n    if (checkPunctuator(firstToken, \"[\")) {\n      if (!openingParsed) {\n        advance(\"[\");\n      }\n\n      if (checkPunctuator(state.tokens.next, \"]\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n\n      var element_after_rest = false;\n\n      while (!checkPunctuator(state.tokens.next, \"]\")) {\n        var isRest = spreadrest(\"rest\");\n        nextInnerDE();\n\n        if (isRest && !element_after_rest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n          element_after_rest = true;\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \"=\")) {\n          if (checkPunctuator(state.tokens.prev, \"...\")) {\n            /* istanbul ignore next */\n            advance(\"]\");\n          } else {\n            advance(\"=\");\n          }\n\n          id = state.tokens.prev;\n          value = expression(context, 10);\n\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"]\")) {\n          advance(\",\");\n        }\n      }\n\n      advance(\"]\");\n    } else if (checkPunctuator(firstToken, \"{\")) {\n      if (!openingParsed) {\n        advance(\"{\");\n      }\n\n      if (checkPunctuator(state.tokens.next, \"}\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        assignmentProperty(context);\n\n        if (checkPunctuator(state.tokens.next, \"=\")) {\n          advance(\"=\");\n          id = state.tokens.prev;\n          value = expression(context, 10);\n\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n\n          if (checkPunctuator(state.tokens.next, \"}\")) {\n            // Trailing comma\n            // ObjectBindingPattern: { BindingPropertyList , }\n            break;\n          }\n        }\n      }\n\n      advance(\"}\");\n    }\n\n    return identifiers;\n  }\n\n  function destructuringPatternMatch(tokens, value) {\n    var first = value.first;\n    if (!first) return;\n\n    _.zip(tokens, Array.isArray(first) ? first : [first]).forEach(function (val) {\n      var token = val[0];\n      var value = val[1];\n      if (token && value) token.first = value;else if (token && token.first && !value)\n        /* istanbul ignore next */\n        warning(\"W080\", token.first, token.first.value);\n    });\n  }\n\n  function blockVariableStatement(type, statement, context) {\n    // used for both let and const statements\n    var noin = context & prodParams.noin;\n    var isLet = type === \"let\";\n    var isConst = type === \"const\";\n    var tokens, lone, value, letblock;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, type, \"6\");\n    }\n\n    if (isLet && isMozillaLet()) {\n      advance(\"(\");\n      state.funct[\"(scope)\"].stack();\n      letblock = true;\n      statement.declaration = false;\n    }\n\n    statement.first = [];\n\n    for (;;) {\n      var names = [];\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [{\n          id: identifier(context),\n          token: state.tokens.curr\n        }];\n        lone = true;\n      } // A `const` declaration without an initializer is permissible within the\n      // head of for-in and for-of statements. If this binding list is being\n      // parsed as part of a `for` statement of any kind, allow the initializer\n      // to be omitted. Although this may erroneously allow such forms from\n      // \"C-style\" `for` statements (i.e. `for (const x;;) {}`, the `for`\n      // statement logic includes dedicated logic to issue the error for such\n      // cases.\n\n\n      if (!noin && isConst && state.tokens.next.id !== \"=\") {\n        warning(\"E012\", state.tokens.curr, state.tokens.curr.value);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t]; // It is a Syntax Error if the BoundNames of BindingList contains\n          // \"let\".\n\n          if (t.id === \"let\") {\n            /* istanbul ignore next */\n            warning(\"W024\", t.token, t.id);\n          }\n\n          if (state.funct[\"(scope)\"].block.isGlobal()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            }\n          }\n\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: type,\n              token: t.token\n            });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        statement.hasInitializer = true;\n        advance(\"=\");\n\n        if (!noin && peek(0).id === \"=\" && state.tokens.next.identifier) {\n          warning(\"W120\", state.tokens.next, state.tokens.next.value);\n        }\n\n        var id = state.tokens.prev;\n        value = expression(context, 10);\n\n        if (value) {\n          if (value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      } // Bindings are not immediately initialized in for-in and for-of\n      // statements. As with `const` initializers (described above), the `for`\n      // statement parsing logic includes\n\n\n      if (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\") {\n        for (t in tokens) {\n          if (tokens.hasOwnProperty(t)) {\n            t = tokens[t];\n            state.funct[\"(scope)\"].initialize(t.id);\n          }\n        }\n      }\n\n      statement.first = statement.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      statement.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    if (letblock) {\n      advance(\")\");\n      block(context, true, true);\n      statement.block = true;\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return statement;\n  }\n\n  var conststatement = stmt(\"const\", function (context) {\n    return blockVariableStatement(\"const\", this, context);\n  });\n  conststatement.exps = true;\n  conststatement.declaration = true;\n  /**\n   * Determine if the current `let` token designates the beginning of a \"let\n   * block\" or \"let expression\" as implemented in the Mozilla SpiderMonkey\n   * engine.\n   *\n   * This function will only return `true` if Mozilla extensions have been\n   * enabled. It would be preferable to detect the language feature regardless\n   * of the parser's state because this would allow JSHint to instruct users to\n   * enable the `moz` option where necessary. This is not possible because the\n   * language extension is not compatible with standard JavaScript. For\n   * example, the following program code may describe a \"let block\" or a\n   * function invocation:\n   *\n   *     let(x)\n   *     {\n   *       typeof x;\n   *     }\n   *\n   * @returns {boolean}\n   */\n\n  function isMozillaLet() {\n    return state.tokens.next.id === \"(\" && state.inMoz();\n  }\n\n  var letstatement = stmt(\"let\", function (context) {\n    return blockVariableStatement(\"let\", this, context);\n  });\n\n  letstatement.nud = function (context, rbp) {\n    if (isMozillaLet()) {\n      // create a new block scope we use only for the current expression\n      state.funct[\"(scope)\"].stack();\n      advance(\"(\");\n      state.tokens.prev.fud(context);\n      advance(\")\");\n      expression(context, rbp);\n      state.funct[\"(scope)\"].unstack();\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  };\n\n  letstatement.meta = {\n    es5: true,\n    isFutureReservedWord: false,\n    strictOnly: true\n  };\n  letstatement.exps = true;\n  letstatement.declaration = true;\n\n  letstatement.useFud = function (context) {\n    var next = state.tokens.next;\n    var nextIsBindingName;\n\n    if (this.line !== next.line && !state.inES6()) {\n      return false;\n    } // JSHint generally interprets `let` as a reserved word even though it is\n    // not considered as such by the ECMAScript specification because doing so\n    // simplifies parsing logic. It is special-cased here so that code such as\n    //\n    //     let\n    //     let\n    //\n    // is correctly interpreted as an invalid LexicalBinding. (Without this\n    // consideration, the code above would be parsed as two\n    // IdentifierReferences.)\n\n\n    nextIsBindingName = next.identifier && (!isReserved(context, next) || next.id === \"let\");\n    return nextIsBindingName || checkPunctuators(next, [\"{\", \"[\"]) || isMozillaLet();\n  };\n\n  var varstatement = stmt(\"var\", function (context) {\n    var noin = context & prodParams.noin;\n    var tokens, lone, value, id;\n    this.first = [];\n\n    for (;;) {\n      var names = [];\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [];\n        id = identifier(context);\n\n        if (id) {\n          tokens.push({\n            id: id,\n            token: state.tokens.curr\n          });\n        }\n\n        lone = true;\n      }\n\n      if (state.option.varstmt) {\n        warning(\"W132\", this);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n\n          if (state.funct[\"(global)\"] && !state.impliedClosure()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            } else if (state.option.futurehostile === false) {\n              if (!state.inES5() && vars.ecmaIdentifiers[5][t.id] === false || !state.inES6() && vars.ecmaIdentifiers[6][t.id] === false) {\n                warning(\"W129\", t.token, t.id);\n              }\n            }\n          }\n\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: \"var\",\n              token: t.token\n            });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        this.hasInitializer = true;\n        state.nameStack.set(state.tokens.curr);\n        advance(\"=\");\n\n        if (peek(0).id === \"=\" && state.tokens.next.identifier) {\n          if (!noin && !state.funct[\"(params)\"] || state.funct[\"(params)\"].indexOf(state.tokens.next.value) === -1) {\n            warning(\"W120\", state.tokens.next, state.tokens.next.value);\n          }\n        }\n\n        id = state.tokens.prev;\n        value = expression(context, 10);\n\n        if (value) {\n          if (!state.funct[\"(loopage)\"] && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      this.first = this.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      this.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    return this;\n  });\n  varstatement.exps = true;\n  blockstmt(\"function\", function (context) {\n    var inexport = context & prodParams.export;\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n    var labelType = \"\";\n\n    if (isAsync) {\n      labelType = \"async \";\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.next, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      labelType += \"generator \";\n      generator = true;\n    }\n\n    labelType += \"function\";\n\n    if (inblock) {\n      warning(\"W082\", state.tokens.curr);\n    }\n\n    this.name = optionalidentifier(context) ? state.tokens.curr : null;\n\n    if (!this.name) {\n      if (!inexport) {\n        warning(\"W025\");\n      }\n    } else {\n      state.funct[\"(scope)\"].addbinding(this.name.value, {\n        type: labelType,\n        token: state.tokens.curr,\n        initialized: true\n      });\n    }\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      statement: this,\n      type: generator ? \"generator\" : null,\n      ignoreLoopFunc: inblock // a declaration may already have warned\n\n    }); // If the function declaration is strict because the surrounding code is\n    // strict, the invalid name will trigger E008 when the scope manager\n    // attempts to create a binding in the strict environment record. An error\n    // should only be signaled here when the function itself enables strict\n    // mode (the scope manager will not report an error because a declaration\n    // does not introduce a binding into the function's environment record).\n\n    var enablesStrictMode = f[\"(isStrict)\"] && !state.isStrict();\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") && enablesStrictMode) {\n      error(\"E008\", this.name);\n    } // Although the parser correctly recognizes the statement boundary in this\n    // condition, it's support for the invalid \"empty grouping\" expression\n    // makes it tolerant of productions such as `function f() {}();`.\n\n\n    if (state.tokens.next.id === \"(\" && peek().id === \")\" && peek(1).id !== \"=>\" && state.tokens.next.line === state.tokens.curr.line) {\n      error(\"E039\");\n    }\n\n    return this;\n  }).declaration = true;\n  prefix(\"function\", function (context) {\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      generator = true;\n    } // This context modification restricts the use of `await` as the optional\n    // BindingIdentifier in async function expressions.\n\n\n    this.name = optionalidentifier(isAsync ? context | prodParams.async : context) ? state.tokens.curr : null;\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      type: generator ? \"generator\" : null\n    });\n\n    if (generator && this.name && this.name.value === \"yield\") {\n      error(\"E024\", this.name, \"yield\");\n    }\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") && f[\"(isStrict)\"]) {\n      error(\"E008\", this.name);\n    }\n\n    return this;\n  });\n  blockstmt(\"if\", function (context) {\n    var t = state.tokens.next;\n    increaseComplexityCount();\n    advance(\"(\");\n    var expr = expression(context, 0);\n\n    if (!expr) {\n      quit(\"E041\", this);\n    }\n\n    checkCondAssignment(expr); // When the if is within a for-in loop, check if the condition\n    // starts with a negation operator\n\n    var forinifcheck = null;\n\n    if (state.option.forin && state.forinifcheckneeded) {\n      state.forinifcheckneeded = false; // We only need to analyze the first if inside the loop\n\n      forinifcheck = state.forinifchecks[state.forinifchecks.length - 1];\n\n      if (expr.type === \"(punctuator)\" && expr.value === \"!\") {\n        forinifcheck.type = \"(negative)\";\n      } else {\n        forinifcheck.type = \"(positive)\";\n      }\n    }\n\n    advance(\")\", t);\n    var s = block(context, true, true); // When the if is within a for-in loop and the condition has a negative form,\n    // check if the body contains nothing but a continue statement\n\n    if (forinifcheck && forinifcheck.type === \"(negative)\") {\n      if (s && s[0] && s[0].type === \"(identifier)\" && s[0].value === \"continue\") {\n        forinifcheck.type = \"(negative-with-continue)\";\n      }\n    }\n\n    if (state.tokens.next.id === \"else\") {\n      advance(\"else\");\n\n      if (state.tokens.next.id === \"if\" || state.tokens.next.id === \"switch\") {\n        statement(context);\n      } else {\n        block(context, true, true);\n      }\n    }\n\n    return this;\n  });\n  blockstmt(\"try\", function (context) {\n    var b;\n    var hasParameter = false;\n\n    function catchParameter() {\n      advance(\"(\");\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        var tokens = destructuringPattern(context);\n\n        _.each(tokens, function (token) {\n          if (token.id) {\n            state.funct[\"(scope)\"].addParam(token.id, token.token, \"exception\");\n          }\n        });\n      } else if (state.tokens.next.type !== \"(identifier)\") {\n        warning(\"E030\", state.tokens.next, state.tokens.next.value);\n      } else {\n        // only advance if an identifier is present. This allows JSHint to\n        // recover from the case where no value is specified.\n        state.funct[\"(scope)\"].addParam(identifier(context), state.tokens.curr, \"exception\");\n      }\n\n      if (state.tokens.next.value === \"if\") {\n        if (!state.inMoz()) {\n          warning(\"W118\", state.tokens.curr, \"catch filter\");\n        }\n\n        advance(\"if\");\n        expression(context, 0);\n      }\n\n      advance(\")\");\n    }\n\n    block(context | prodParams.tryClause, true);\n\n    while (state.tokens.next.id === \"catch\") {\n      increaseComplexityCount();\n\n      if (b && !state.inMoz()) {\n        warning(\"W118\", state.tokens.next, \"multiple catch blocks\");\n      }\n\n      advance(\"catch\");\n\n      if (state.tokens.next.id !== \"{\") {\n        state.funct[\"(scope)\"].stack(\"catchparams\");\n        hasParameter = true;\n        catchParameter();\n      } else if (!state.inES10()) {\n        warning(\"W119\", state.tokens.curr, \"optional catch binding\", \"10\");\n      }\n\n      block(context, false);\n\n      if (hasParameter) {\n        state.funct[\"(scope)\"].unstack();\n        hasParameter = false;\n      }\n\n      b = true;\n    }\n\n    if (state.tokens.next.id === \"finally\") {\n      advance(\"finally\");\n      block(context, true);\n      return;\n    }\n\n    if (!b) {\n      error(\"E021\", state.tokens.next, \"catch\", state.tokens.next.value);\n    }\n\n    return this;\n  });\n  blockstmt(\"while\", function (context) {\n    var t = state.tokens.next;\n    state.funct[\"(breakage)\"] += 1;\n    state.funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    block(context, true, true);\n    state.funct[\"(breakage)\"] -= 1;\n    state.funct[\"(loopage)\"] -= 1;\n    return this;\n  }).labelled = true;\n  blockstmt(\"with\", function (context) {\n    var t = state.tokens.next;\n\n    if (state.isStrict()) {\n      error(\"E010\", state.tokens.curr);\n    } else if (!state.option.withstmt) {\n      warning(\"W085\", state.tokens.curr);\n    }\n\n    advance(\"(\");\n    expression(context, 0);\n    advance(\")\", t);\n    block(context, true, true);\n    return this;\n  });\n  blockstmt(\"switch\", function (context) {\n    var t = state.tokens.next;\n    var g = false;\n    var noindent = false;\n    var seenCase = false;\n    state.funct[\"(breakage)\"] += 1;\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    t = state.tokens.next;\n    advance(\"{\");\n    state.funct[\"(scope)\"].stack();\n    if (state.tokens.next.from === indent) noindent = true;\n    if (!noindent) indent += state.option.indent;\n\n    for (;;) {\n      switch (state.tokens.next.id) {\n        case \"case\":\n          switch (state.funct[\"(verb)\"]) {\n            case \"yield\":\n            case \"break\":\n            case \"case\":\n            case \"continue\":\n            case \"return\":\n            case \"switch\":\n            case \"throw\":\n              break;\n\n            case \"default\":\n              if (state.option.leanswitch) {\n                warning(\"W145\", state.tokens.next);\n              }\n\n              break;\n\n            default:\n              // You can tell JSHint that you don't use break intentionally by\n              // adding a comment /* falls through */ on a line just before\n              // the next `case`.\n              if (!state.tokens.curr.caseFallsThrough) {\n                warning(\"W086\", state.tokens.curr, \"case\");\n              }\n\n          }\n\n          advance(\"case\");\n          expression(context, 0);\n          seenCase = true;\n          increaseComplexityCount();\n          g = true;\n          advance(\":\");\n          state.funct[\"(verb)\"] = \"case\";\n          break;\n\n        case \"default\":\n          switch (state.funct[\"(verb)\"]) {\n            case \"yield\":\n            case \"break\":\n            case \"continue\":\n            case \"return\":\n            case \"throw\":\n              break;\n\n            case \"case\":\n              if (state.option.leanswitch) {\n                warning(\"W145\", state.tokens.curr);\n              }\n\n              break;\n\n            default:\n              // Do not display a warning if 'default' is the first statement or if\n              // there is a special /* falls through */ comment.\n              if (seenCase && !state.tokens.curr.caseFallsThrough) {\n                warning(\"W086\", state.tokens.curr, \"default\");\n              }\n\n          }\n\n          advance(\"default\");\n          g = true;\n          advance(\":\");\n          state.funct[\"(verb)\"] = \"default\";\n          break;\n\n        case \"}\":\n          if (!noindent) indent -= state.option.indent;\n          advance(\"}\", t);\n          state.funct[\"(scope)\"].unstack();\n          state.funct[\"(breakage)\"] -= 1;\n          state.funct[\"(verb)\"] = undefined;\n          return;\n\n        /* istanbul ignore next */\n\n        case \"(end)\":\n          error(\"E023\", state.tokens.next, \"}\");\n          return;\n\n        default:\n          indent += state.option.indent;\n\n          if (g) {\n            switch (state.tokens.curr.id) {\n              /* istanbul ignore next */\n              case \",\":\n                error(\"E040\");\n                return;\n\n              case \":\":\n                g = false;\n                statements(context);\n                break;\n\n              /* istanbul ignore next */\n\n              default:\n                error(\"E025\", state.tokens.curr);\n                return;\n            }\n          } else {\n            /* istanbul ignore else */\n            if (state.tokens.curr.id === \":\") {\n              advance(\":\");\n              error(\"E024\", state.tokens.curr, \":\");\n              statements(context);\n            } else {\n              error(\"E021\", state.tokens.next, \"case\", state.tokens.next.value);\n              return;\n            }\n          }\n\n          indent -= state.option.indent;\n      }\n    }\n  }).labelled = true;\n  stmt(\"debugger\", function () {\n    if (!state.option.debug) {\n      warning(\"W087\", this);\n    }\n\n    return this;\n  }).exps = true;\n\n  (function () {\n    var x = stmt(\"do\", function (context) {\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      increaseComplexityCount();\n      this.first = block(context, true, true);\n      advance(\"while\");\n      var t = state.tokens.next;\n      advance(\"(\");\n      checkCondAssignment(expression(context, 0));\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n      return this;\n    });\n    x.labelled = true;\n    x.exps = true;\n  })();\n\n  blockstmt(\"for\", function (context) {\n    var s,\n        t = state.tokens.next;\n    var letscope = false;\n    var isAsync = false;\n    var foreachtok = null;\n\n    if (t.value === \"each\") {\n      foreachtok = t;\n      advance(\"each\");\n\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    if (state.tokens.next.identifier && state.tokens.next.value === \"await\") {\n      advance(\"await\");\n      isAsync = true;\n\n      if (!(context & prodParams.async)) {\n        error(\"E024\", state.tokens.curr, \"await\");\n      } else if (!state.inES9()) {\n        warning(\"W119\", state.tokens.curr, \"asynchronous iteration\", \"9\");\n      }\n    }\n\n    increaseComplexityCount();\n    advance(\"(\"); // what kind of for(…) statement it is? for(…of…)? for(…in…)? for(…;…;…)?\n\n    var nextop; // contains the token of the \"in\" or \"of\" operator\n\n    var comma; // First comma punctuator at level 0\n\n    var initializer; // First initializer at level 0\n\n    var bindingPower;\n    var targets;\n    var target;\n    var decl;\n    var afterNext = peek();\n    var headContext = context | prodParams.noin;\n\n    if (state.tokens.next.id === \"var\") {\n      advance(\"var\");\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (state.tokens.next.id === \"const\" || // The \"let\" keyword only signals a lexical binding if it is followed by\n    // an identifier, `{`, or `[`. Otherwise, it should be parsed as an\n    // IdentifierReference (i.e. in a subsquent branch).\n    state.tokens.next.id === \"let\" && (afterNext.identifier && afterNext.id !== \"in\" || checkPunctuators(afterNext, [\"{\", \"[\"]))) {\n      advance(state.tokens.next.id); // create a new block scope\n\n      letscope = true;\n      state.funct[\"(scope)\"].stack();\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (!checkPunctuator(state.tokens.next, \";\")) {\n      targets = [];\n\n      while (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\" && !checkPunctuator(state.tokens.next, \";\")) {\n        if (checkPunctuators(state.tokens.next, [\"{\", \"[\"])) {\n          destructuringPattern(headContext, {\n            assignment: true\n          }).forEach(function (elem) {\n            this.push(elem.token);\n          }, targets);\n\n          if (checkPunctuator(state.tokens.next, \"=\")) {\n            advance(\"=\");\n            initializer = state.tokens.curr;\n            expression(headContext, 10);\n          }\n        } else {\n          target = expression(headContext, 10);\n\n          if (target) {\n            if (target.type === \"(identifier)\") {\n              targets.push(target);\n            } else if (checkPunctuator(target, \"=\")) {\n              initializer = target;\n              targets.push(target);\n            }\n          }\n        }\n\n        if (checkPunctuator(state.tokens.next, \",\")) {\n          advance(\",\");\n\n          if (!comma) {\n            comma = state.tokens.curr;\n          }\n        }\n      } //checkLeftSideAssign(target, nextop);\n      // In the event of a syntax error, do not issue warnings regarding the\n      // implicit creation of bindings.\n\n\n      if (!initializer && !comma) {\n        targets.forEach(function (token) {\n          if (!state.funct[\"(scope)\"].has(token.value)) {\n            warning(\"W088\", token, token.value);\n          }\n        });\n      }\n    }\n\n    nextop = state.tokens.next;\n\n    if (isAsync && nextop.value !== \"of\") {\n      error(\"E066\", nextop);\n    } // if we're in a for (… in|of …) statement\n\n\n    if (_.includes([\"in\", \"of\"], nextop.value)) {\n      if (nextop.value === \"of\") {\n        bindingPower = 20;\n\n        if (!state.inES6()) {\n          warning(\"W104\", nextop, \"for of\", \"6\");\n        }\n      } else {\n        bindingPower = 0;\n      }\n\n      if (comma) {\n        error(\"W133\", comma, nextop.value, \"more than one ForBinding\");\n      }\n\n      if (initializer) {\n        error(\"W133\", initializer, nextop.value, \"initializer is forbidden\");\n      }\n\n      if (target && !comma && !initializer) {\n        checkLeftSideAssign(context, target, nextop);\n      }\n\n      advance(nextop.value); // The binding power is variable because for-in statements accept any\n      // Expression in this position, while for-of statements are limited to\n      // AssignmentExpressions. For example:\n      //\n      //     for ( LeftHandSideExpression in Expression ) Statement\n      //     for ( LeftHandSideExpression of AssignmentExpression ) Statement\n\n      expression(context, bindingPower);\n      advance(\")\", t);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        state.forinifcheckneeded = true;\n\n        if (state.forinifchecks === undefined) {\n          state.forinifchecks = [];\n        } // Push a new for-in-if check onto the stack. The type will be modified\n        // when the loop's body is parsed and a suitable if statement exists.\n\n\n        state.forinifchecks.push({\n          type: \"(none)\"\n        });\n      }\n\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      s = block(context, true, true);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        if (state.forinifchecks && state.forinifchecks.length > 0) {\n          var check = state.forinifchecks.pop();\n\n          if ( // No if statement or not the first statement in loop body\n          s && s.length > 0 && (typeof s[0] !== \"object\" || s[0].value !== \"if\") || // Positive if statement is not the only one in loop body\n          check.type === \"(positive)\" && s.length > 1 || // Negative if statement but no continue\n          check.type === \"(negative)\") {\n            warning(\"W089\", this);\n          }\n        } // Reset the flag in case no if statement was contained in the loop body\n\n\n        state.forinifcheckneeded = false;\n      }\n\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    } else {\n      if (foreachtok) {\n        error(\"E045\", foreachtok);\n      }\n\n      advance(\";\");\n\n      if (decl && decl.first && decl.first[0]) {\n        if (decl.value === \"const\" && !decl.hasInitializer) {\n          warning(\"E012\", decl, decl.first[0].value);\n        }\n\n        decl.first.forEach(function (token) {\n          state.funct[\"(scope)\"].initialize(token.value);\n        });\n      } // start loopage after the first ; as the next two expressions are executed\n      // on every loop\n\n\n      state.funct[\"(loopage)\"] += 1;\n\n      if (state.tokens.next.id !== \";\") {\n        checkCondAssignment(expression(context, 0));\n      }\n\n      advance(\";\");\n\n      if (state.tokens.next.id === \";\") {\n        error(\"E021\", state.tokens.next, \")\", \";\");\n      }\n\n      if (state.tokens.next.id !== \")\") {\n        for (;;) {\n          expression(context, 0);\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n          checkComma();\n        }\n      }\n\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] += 1;\n      block(context, true, true);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    } // unstack loop blockscope\n\n\n    if (letscope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return this;\n  }).labelled = true;\n  stmt(\"break\", function () {\n    var v = state.tokens.next.value;\n\n    if (state.tokens.next.identifier && sameLine(state.tokens.curr, state.tokens.next)) {\n      if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n        warning(\"W090\", state.tokens.next, v);\n      }\n\n      this.first = state.tokens.next;\n      advance();\n    } else {\n      if (state.funct[\"(breakage)\"] === 0) warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  stmt(\"continue\", function () {\n    var v = state.tokens.next.value;\n\n    if (state.funct[\"(breakage)\"] === 0 || !state.funct[\"(loopage)\"]) {\n      warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    if (state.tokens.next.identifier) {\n      if (sameLine(state.tokens.curr, state.tokens.next)) {\n        if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n          warning(\"W090\", state.tokens.next, v);\n        }\n\n        this.first = state.tokens.next;\n        advance();\n      }\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  stmt(\"return\", function (context) {\n    if (sameLine(this, state.tokens.next)) {\n      if (state.tokens.next.id !== \";\" && !state.tokens.next.reach) {\n        this.first = expression(context, 0);\n\n        if (this.first && this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n\n        if (state.option.noreturnawait && context & prodParams.async && !(context & prodParams.tryClause) && this.first.identifier && this.first.value === \"await\") {\n          warning(\"W146\", this.first);\n        }\n      }\n    } else {\n      if (state.tokens.next.type === \"(punctuator)\" && [\"[\", \"{\", \"+\", \"-\"].indexOf(state.tokens.next.value) > -1) {\n        nolinebreak(this); // always warn (Line breaking error)\n      }\n    }\n\n    reachable(this);\n    return this;\n  }).exps = true;\n  prefix(\"await\", function (context) {\n    if (context & prodParams.async) {\n      // If the parameters of the current function scope have not been defined,\n      // it is because the current expression is contained within the parameter\n      // list.\n      if (!state.funct[\"(params)\"]) {\n        error(\"E024\", this, \"await\");\n      }\n\n      expression(context, 10);\n      return this;\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  }).exps = true;\n\n  (function (asyncSymbol) {\n    asyncSymbol.meta = {\n      es5: true,\n      isFutureReservedWord: true,\n      strictOnly: true\n    };\n\n    asyncSymbol.isFunc = function () {\n      var next = state.tokens.next;\n      var afterParens;\n\n      if (this.line !== next.line) {\n        return false;\n      }\n\n      if (next.id === \"function\") {\n        return true;\n      }\n\n      if (next.id === \"(\") {\n        afterParens = peekThroughParens(0);\n        return afterParens.id === \"=>\";\n      }\n\n      if (next.identifier) {\n        return peek().id === \"=>\";\n      }\n\n      return false;\n    };\n\n    asyncSymbol.useFud = asyncSymbol.isFunc; // async function declaration\n\n    asyncSymbol.fud = function (context) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      context |= prodParams.initial;\n      this.func = expression(context, 0);\n      this.block = this.func.block;\n      this.exps = this.func.exps;\n      return this;\n    };\n\n    asyncSymbol.exps = true;\n    delete asyncSymbol.reserved;\n  })(prefix(\"async\", function (context, rbp) {\n    if (this.isFunc(context)) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      this.func = expression(context, rbp);\n      this.identifier = false;\n      return this;\n    }\n\n    this.exps = false;\n    return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n  }));\n\n  (function (yieldSymbol) {\n    yieldSymbol.rbp = yieldSymbol.lbp = 25;\n    yieldSymbol.exps = true;\n  })(prefix(\"yield\", function (context) {\n    if (state.inMoz()) {\n      return mozYield.call(this, context);\n    }\n\n    if (!(context & prodParams.yield)) {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n\n    var prev = state.tokens.prev; // If the parameters of the current function scope have not been defined,\n    // it is because the current expression is contained within the parameter\n    // list.\n\n    if (!state.funct[\"(params)\"]) {\n      error(\"E024\", this, \"yield\");\n    }\n\n    if (!this.beginsStmt && prev.lbp > 30 && !checkPunctuators(prev, [\"(\"])) {\n      error(\"E061\", this);\n    }\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"yield\", \"6\");\n    }\n\n    state.funct[\"(yielded)\"] = true;\n\n    if (state.tokens.next.value === \"*\") {\n      advance(\"*\");\n    } // Parse operand\n\n\n    if (state.tokens.curr.value === \"*\" || sameLine(state.tokens.curr, state.tokens.next)) {\n      if (state.tokens.next.nud) {\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      } else if (state.tokens.next.led) {\n        if (state.tokens.next.id !== \",\") {\n          error(\"W017\", state.tokens.next);\n        }\n      }\n    }\n\n    return this;\n  }));\n  /**\n   * Parsing logic for non-standard Mozilla implementation of `yield`\n   * expressions.\n   */\n\n\n  var mozYield = function mozYield(context) {\n    var prev = state.tokens.prev;\n\n    if (state.inES6(true) && !(context & prodParams.yield)) {\n      error(\"E046\", state.tokens.curr, \"yield\");\n    }\n\n    state.funct[\"(yielded)\"] = true;\n    var delegatingYield = false;\n\n    if (state.tokens.next.value === \"*\") {\n      delegatingYield = true;\n      advance(\"*\");\n    }\n\n    if (sameLine(this, state.tokens.next)) {\n      if (delegatingYield || state.tokens.next.id !== \";\" && !state.option.asi && !state.tokens.next.reach && state.tokens.next.nud) {\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" && !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      }\n\n      if (state.tokens.next.id !== \")\" && (prev.lbp > 30 || !prev.assign && !isEndOfExpr())) {\n        error(\"E050\", this);\n      }\n    } else if (!state.option.asi) {\n      nolinebreak(this); // always warn (Line breaking error)\n    }\n\n    return this;\n  };\n\n  stmt(\"throw\", function (context) {\n    nolinebreak(this);\n    this.first = expression(context, 20);\n    reachable(this);\n    return this;\n  }).exps = true;\n  prefix(\"import\", function (context) {\n    var mp = metaProperty(context, \"meta\", function () {\n      if (!state.inES11(true)) {\n        warning(\"W119\", state.tokens.prev, \"import.meta\", \"11\");\n      }\n\n      if (!state.option.module) {\n        error(\"E070\", state.tokens.prev);\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    if (!checkPunctuator(state.tokens.next, \"(\")) {\n      return state.syntax[\"(identifier)\"].nud.call(this, context);\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"dynamic import\", \"11\");\n    }\n\n    advance(\"(\");\n    expression(context, 10);\n    advance(\")\");\n    return this;\n  });\n  var importSymbol = stmt(\"import\", function (context) {\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Import\");\n    }\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"import\", \"6\");\n    }\n\n    if (state.tokens.next.type === \"(string)\") {\n      // ModuleSpecifier :: StringLiteral\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.identifier) {\n      // ImportClause :: ImportedDefaultBinding\n      this.name = identifier(context); // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n      state.funct[\"(scope)\"].addbinding(this.name, {\n        type: \"import\",\n        initialized: true,\n        token: state.tokens.curr\n      });\n\n      if (state.tokens.next.value === \",\") {\n        // ImportClause :: ImportedDefaultBinding , NameSpaceImport\n        // ImportClause :: ImportedDefaultBinding , NamedImports\n        advance(\",\"); // At this point, we intentionally fall through to continue matching\n        // either NameSpaceImport or NamedImports.\n        // Discussion:\n        // https://github.com/jshint/jshint/pull/2144#discussion_r23978406\n      } else {\n        advance(\"from\");\n        advance(\"(string)\");\n        return this;\n      }\n    }\n\n    if (state.tokens.next.id === \"*\") {\n      // ImportClause :: NameSpaceImport\n      advance(\"*\");\n      advance(\"as\");\n\n      if (state.tokens.next.identifier) {\n        this.name = identifier(context); // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n        state.funct[\"(scope)\"].addbinding(this.name, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr\n        });\n      }\n    } else {\n      // ImportClause :: NamedImports\n      advance(\"{\");\n\n      for (;;) {\n        if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        }\n\n        var importName;\n\n        if (peek().value === \"as\") {\n          identifier(context, true);\n          advance(\"as\");\n          importName = identifier(context);\n        } else {\n          importName = identifier(context);\n        } // Import bindings are immutable (see ES6 8.1.1.5.5)\n\n\n        state.funct[\"(scope)\"].addbinding(importName, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr\n        });\n\n        if (state.tokens.next.value === \",\") {\n          advance(\",\");\n        } else if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        } else {\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          break;\n        }\n      }\n    } // FromClause\n\n\n    advance(\"from\");\n    advance(\"(string)\"); // Support for ES2015 modules was released without warning for `import`\n    // declarations that lack bindings. Issuing a warning would therefor\n    // constitute a breaking change.\n    // TODO: enable this warning in JSHint 3\n    // if (hasBindings) {\n    //   warning(\"W142\", this, \"import\", moduleSpecifier);\n    // }\n\n    return this;\n  });\n  importSymbol.exps = true;\n  importSymbol.reserved = true;\n  importSymbol.meta = {\n    isFutureReservedWord: true,\n    es5: true\n  };\n\n  importSymbol.useFud = function () {\n    return !checkPunctuators(state.tokens.next, [\".\", \"(\"]);\n  };\n\n  importSymbol.rbp = 161;\n  stmt(\"export\", function (context) {\n    var ok = true;\n    var token;\n    var moduleSpecifier;\n    context = context | prodParams.export;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"export\", \"6\");\n      ok = false;\n    }\n\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Export\");\n      ok = false;\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      // ExportDeclaration :: export * FromClause\n      // ExportDeclaration :: export * as IdentifierName FromClause\n      advance(\"*\");\n\n      if (state.tokens.next.value === \"as\") {\n        if (!state.inES11()) {\n          warning(\"W119\", state.tokens.curr, \"export * as ns from\", \"11\");\n        }\n\n        advance(\"as\");\n        identifier(context, true);\n        state.funct[\"(scope)\"].setExported(null, state.tokens.curr);\n      }\n\n      advance(\"from\");\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.type === \"default\") {\n      // ExportDeclaration ::\n      //      export default [lookahead ∉ { function, class }] AssignmentExpression[In] ;\n      //      export default HoistableDeclaration\n      //      export default ClassDeclaration\n      // because the 'name' of a default-exported function is, confusingly, 'default'\n      // see https://bocoup.com/blog/whats-in-a-function-name\n      state.nameStack.set(state.tokens.next);\n      advance(\"default\");\n      var def = state.tokens.curr;\n      var exportType = state.tokens.next.id;\n\n      if (exportType === \"function\") {\n        this.block = true;\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"async\" && peek().id === \"function\") {\n        this.block = true;\n        advance(\"async\");\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"class\") {\n        this.block = true;\n        advance(\"class\");\n        token = state.syntax[\"class\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else {\n        expression(context, 10);\n        state.funct[\"(scope)\"].setExported(null, def);\n      }\n\n      return this;\n    }\n\n    if (state.tokens.next.value === \"{\") {\n      // ExportDeclaration :: export ExportClause\n      advance(\"{\");\n      var exportedTokens = [];\n\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        if (!state.tokens.next.identifier) {\n          /* istanbul ignore next */\n          error(\"E030\", state.tokens.next, state.tokens.next.value);\n        }\n\n        advance();\n\n        if (state.tokens.next.value === \"as\") {\n          advance(\"as\");\n\n          if (!state.tokens.next.identifier) {\n            /* istanbul ignore next */\n            error(\"E030\", state.tokens.next, state.tokens.next.value);\n          }\n\n          exportedTokens.push({\n            local: state.tokens.prev,\n            export: state.tokens.next\n          });\n          advance();\n        } else {\n          exportedTokens.push({\n            local: state.tokens.curr,\n            export: state.tokens.curr\n          });\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n        }\n      }\n\n      advance(\"}\");\n\n      if (state.tokens.next.value === \"from\") {\n        // ExportDeclaration :: export ExportClause FromClause\n        advance(\"from\");\n        moduleSpecifier = state.tokens.next;\n        advance(\"(string)\");\n      } else if (ok) {\n        exportedTokens.forEach(function (x) {\n          state.funct[\"(scope)\"].setExported(x.local, x.export);\n        });\n      }\n\n      if (exportedTokens.length === 0) {\n        if (moduleSpecifier) {\n          warning(\"W142\", this, \"export\", moduleSpecifier.value);\n        } else {\n          warning(\"W141\", this, \"export\");\n        }\n      }\n\n      return this;\n    } else if (state.tokens.next.id === \"var\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"var\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"let\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"let\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"const\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"const\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function (binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"async\" && peek().id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"async\");\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"class\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"class\");\n      token = state.syntax[\"class\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else {\n      /* istanbul ignore next */\n      error(\"E024\", state.tokens.next, state.tokens.next.value);\n    }\n\n    return this;\n  }).exps = true;\n  /**\n   * Determine if SuperCall or SuperProperty may be used in the current context\n   * (as described by the provided \"functor\" object).\n   *\n   * @param {string} type - one of \"property\" or \"call\"\n   * @param {object} funct - a \"functor\" object describing the current function\n   *                         context\n   *\n   * @returns {boolean}\n   */\n\n  function supportsSuper(type, funct) {\n    if (type === \"call\" && funct[\"(async)\"]) {\n      return false;\n    }\n\n    if (type === \"property\" && funct[\"(method)\"]) {\n      return true;\n    }\n\n    if (type === \"call\" && funct[\"(statement)\"] && funct[\"(statement)\"].id === \"class\") {\n      return true;\n    }\n\n    if (funct[\"(arrow)\"]) {\n      return supportsSuper(type, funct[\"(context)\"]);\n    }\n\n    return false;\n  }\n\n  var superNud = function superNud() {\n    var next = state.tokens.next;\n\n    if (checkPunctuators(next, [\"[\", \".\"])) {\n      if (!supportsSuper(\"property\", state.funct)) {\n        error(\"E063\", this);\n      }\n    } else if (checkPunctuator(next, \"(\")) {\n      if (!supportsSuper(\"call\", state.funct)) {\n        error(\"E064\", this);\n      }\n    } else {\n      error(\"E024\", next, next.value || next.id);\n    }\n\n    return this;\n  }; // Future Reserved Words\n\n\n  FutureReservedWord(\"abstract\");\n  FutureReservedWord(\"boolean\");\n  FutureReservedWord(\"byte\");\n  FutureReservedWord(\"char\");\n  FutureReservedWord(\"double\");\n  FutureReservedWord(\"enum\", {\n    es5: true\n  });\n  FutureReservedWord(\"export\", {\n    es5: true\n  });\n  FutureReservedWord(\"extends\", {\n    es5: true\n  });\n  FutureReservedWord(\"final\");\n  FutureReservedWord(\"float\");\n  FutureReservedWord(\"goto\");\n  FutureReservedWord(\"implements\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"int\");\n  FutureReservedWord(\"interface\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"long\");\n  FutureReservedWord(\"native\");\n  FutureReservedWord(\"package\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"private\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"protected\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"public\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"short\");\n  FutureReservedWord(\"static\", {\n    es5: true,\n    strictOnly: true\n  });\n  FutureReservedWord(\"synchronized\");\n  FutureReservedWord(\"transient\");\n  FutureReservedWord(\"volatile\"); // this function is used to determine whether a squarebracket or a curlybracket\n  // expression is a comprehension array, destructuring assignment or a json value.\n\n  var lookupBlockType = function lookupBlockType() {\n    var pn, pn1, prev;\n    var i = -1;\n    var bracketStack = 0;\n    var ret = {};\n\n    if (checkPunctuators(state.tokens.curr, [\"[\", \"{\"])) {\n      bracketStack += 1;\n    }\n\n    do {\n      prev = i === -1 ? state.tokens.curr : pn;\n      pn = i === -1 ? state.tokens.next : peek(i);\n      pn1 = peek(i + 1);\n      i = i + 1;\n\n      if (checkPunctuators(pn, [\"[\", \"{\"])) {\n        bracketStack += 1;\n      } else if (checkPunctuators(pn, [\"]\", \"}\"])) {\n        bracketStack -= 1;\n      }\n\n      if (bracketStack === 1 && pn.identifier && pn.value === \"for\" && !checkPunctuator(prev, \".\")) {\n        ret.isCompArray = true;\n        ret.notJson = true;\n        break;\n      }\n\n      if (bracketStack === 0 && checkPunctuators(pn, [\"}\", \"]\"])) {\n        if (pn1.value === \"=\") {\n          ret.isDestAssign = true;\n          ret.notJson = true;\n          break;\n        } else if (pn1.value === \".\") {\n          ret.notJson = true;\n          break;\n        }\n      }\n\n      if (checkPunctuator(pn, \";\")) {\n        ret.notJson = true;\n      }\n    } while (bracketStack > 0 && pn.id !== \"(end)\");\n\n    return ret;\n  };\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current property is being\n   *                         assigned\n   * @param {string} name - the property name\n   * @param {object} tkn - the token defining the property\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   * @param {boolean} [isComputed] - whether the property is a computed expression like [Symbol.iterator]\n   */\n\n\n  function saveProperty(props, name, tkn, isClass, isStatic, isComputed) {\n    if (tkn.identifier) {\n      name = tkn.value;\n    }\n\n    var key = name;\n\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key] && name !== \"__proto__\" && !isComputed) {\n      var msg = [\"key\", \"class method\", \"static class method\"];\n      msg = msg[(isClass || false) + (isStatic || false)];\n      warning(\"W075\", state.tokens.next, msg, name);\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key].basic = true;\n    props[key].basictkn = tkn;\n  }\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {string} accessorType - Either \"get\" or \"set\"\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current accessor is being\n   *                         assigned\n   * @param {object} tkn - the identifier token representing the accessor name\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   */\n\n\n  function saveAccessor(accessorType, props, name, tkn, isClass, isStatic) {\n    var flagName = accessorType === \"get\" ? \"getterToken\" : \"setterToken\";\n    var key = name;\n    state.tokens.curr.accessorType = accessorType;\n    state.nameStack.set(tkn);\n\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key]) {\n      if ((props[key].basic || props[key][flagName]) && name !== \"__proto__\") {\n        var msg = \"\";\n\n        if (isClass) {\n          if (isStatic) {\n            msg += \"static \";\n          }\n\n          msg += accessorType + \"ter method\";\n        } else {\n          msg = \"key\";\n        }\n\n        warning(\"W075\", state.tokens.next, msg, name);\n      }\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key][flagName] = tkn;\n\n    if (isStatic) {\n      props[key].static = true;\n    }\n  }\n  /**\n   * Parse a computed property name within object initializers and class bodies\n   * as introduced by ES2015. For example:\n   *\n   *     void {\n   *       [object.method()]: null\n   *     };\n   *\n   * @param {number} context - the parsing context\n   *\n   * @returns {object} - the token value that describes the expression which\n   *                     defines the property name\n   */\n\n\n  function computedPropertyName(context) {\n    advance(\"[\"); // Explicitly reclassify token as a delimeter to prevent its later\n    // interpretation as an \"infix\" operator.\n\n    state.tokens.curr.delim = true;\n    state.tokens.curr.lbp = 0;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"computed property names\", \"6\");\n    }\n\n    var value = expression(context & ~prodParams.noin, 10);\n    advance(\"]\");\n    return value;\n  }\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * one of the specified values. This function explicitly verifies the token's\n   * `type` property so that like-valued string literals (e.g. `\";\"`) do not\n   * produce false positives.\n   *\n   * @param {Token} token\n   * @param {Array.<string>} values\n   *\n   * @returns {boolean}\n   */\n\n\n  function checkPunctuators(token, values) {\n    if (token.type === \"(punctuator)\") {\n      return _.includes(values, token.value);\n    }\n\n    return false;\n  }\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * the specified value. This function explicitly verifies the token's `type`\n   * property so that like-valued string literals (e.g. `\";\"`) do not produce\n   * false positives.\n   *\n   * @param {Token} token\n   * @param {string} value\n   *\n   * @returns {boolean}\n   */\n\n\n  function checkPunctuator(token, value) {\n    return token.type === \"(punctuator)\" && token.value === value;\n  } // Check whether this function has been reached for a destructuring assign with undeclared values\n\n\n  function destructuringAssignOrJsonValue(context) {\n    // lookup for the assignment (ECMAScript 6 only)\n    // if it has semicolons, it is a block, so go parse it as a block\n    // or it's not a block, but there are assignments, check for undeclared variables\n    var block = lookupBlockType();\n\n    if (block.notJson) {\n      if (!state.inES6() && block.isDestAssign) {\n        /* istanbul ignore next */\n        warning(\"W104\", state.tokens.curr, \"destructuring assignment\", \"6\");\n      }\n\n      statements(context); // otherwise parse json value\n    } else {\n      state.option.laxbreak = true;\n      state.jsonMode = true;\n      jsonValue();\n    }\n  }\n  /**\n   * Parse and define the three states of a list comprehension in order to\n   * avoid defining global variables, but keeping them to the list\n   * comprehension scope only. The order of the states are as follows:\n   *\n   * - \"use\" - which will be the returned iterative part of the list\n   *   comprehension\n   * - \"define\" - which will define the variables local to the list\n   *   comprehension\n   * - \"filter\" - which will help filter out values\n   */\n\n\n  var arrayComprehension = function arrayComprehension() {\n    var CompArray = function CompArray() {\n      this.mode = \"use\";\n      this.variables = [];\n    };\n\n    var _carrays = [];\n\n    var _current;\n\n    function declare(v) {\n      var l = _current.variables.filter(function (elt) {\n        // if it has, change its undef state\n        if (elt.value === v) {\n          elt.undef = false;\n          return v;\n        }\n      }).length;\n\n      return l !== 0;\n    }\n\n    function use(v) {\n      var l = _current.variables.filter(function (elt) {\n        // and if it has been defined\n        if (elt.value === v && !elt.undef) {\n          if (elt.unused === true) {\n            elt.unused = false;\n          }\n\n          return v;\n        }\n      }).length; // otherwise we warn about it\n\n\n      return l === 0;\n    }\n\n    return {\n      stack: function stack() {\n        _current = new CompArray();\n\n        _carrays.push(_current);\n      },\n      unstack: function unstack() {\n        _current.variables.filter(function (v) {\n          if (v.unused) warning(\"W098\", v.token, v.token.raw_text || v.value);\n          if (v.undef) state.funct[\"(scope)\"].block.use(v.value, v.token);\n        });\n\n        _carrays.splice(-1, 1);\n\n        _current = _carrays[_carrays.length - 1];\n      },\n      setState: function setState(s) {\n        if (_.includes([\"use\", \"define\", \"generate\", \"filter\"], s)) _current.mode = s;\n      },\n      check: function check(v) {\n        if (!_current) {\n          return;\n        } // When we are in \"use\" state of the list comp, we enqueue that var\n\n\n        if (_current && _current.mode === \"use\") {\n          if (use(v)) {\n            _current.variables.push({\n              token: state.tokens.curr,\n              value: v,\n              undef: true,\n              unused: false\n            });\n          }\n\n          return true; // When we are in \"define\" state of the list comp,\n        } else if (_current && _current.mode === \"define\") {\n          // check if the variable has been used previously\n          if (!declare(v)) {\n            _current.variables.push({\n              token: state.tokens.curr,\n              value: v,\n              undef: false,\n              unused: true\n            });\n          }\n\n          return true; // When we are in the \"generate\" state of the list comp,\n        } else if (_current && _current.mode === \"generate\") {\n          state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n          return true; // When we are in \"filter\" state,\n        } else if (_current && _current.mode === \"filter\") {\n          // we check whether current variable has been declared\n          if (use(v)) {\n            // if not we warn about it\n\n            /* istanbul ignore next */\n            state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n          }\n\n          return true;\n        }\n        /* istanbul ignore next */\n\n\n        return false;\n      }\n    };\n  };\n  /**\n   * Parse input according to the JSON format.\n   *\n   * http://json.org/\n   */\n\n\n  function jsonValue() {\n    function jsonObject() {\n      var o = {},\n          t = state.tokens.next;\n      advance(\"{\");\n\n      if (state.tokens.next.id !== \"}\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E026\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"}\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          } else if (state.tokens.next.id !== \"(string)\") {\n            warning(\"W095\", state.tokens.next, state.tokens.next.value);\n          }\n\n          if (o[state.tokens.next.value] === true) {\n            warning(\"W075\", state.tokens.next, \"key\", state.tokens.next.value);\n          } else if (state.tokens.next.value === \"__proto__\" && !state.option.proto || state.tokens.next.value === \"__iterator__\" && !state.option.iterator) {\n            warning(\"W096\", state.tokens.next, state.tokens.next.value);\n          } else {\n            o[state.tokens.next.value] = true;\n          }\n\n          advance();\n          advance(\":\");\n          jsonValue();\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"}\");\n    }\n\n    function jsonArray() {\n      var t = state.tokens.next;\n      advance(\"[\");\n\n      if (state.tokens.next.id !== \"]\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E027\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"]\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          }\n\n          jsonValue();\n\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n\n          advance(\",\");\n        }\n      }\n\n      advance(\"]\");\n    }\n\n    switch (state.tokens.next.id) {\n      case \"{\":\n        jsonObject();\n        break;\n\n      case \"[\":\n        jsonArray();\n        break;\n\n      case \"true\":\n      case \"false\":\n      case \"null\":\n      case \"(number)\":\n      case \"(string)\":\n        advance();\n        break;\n\n      case \"-\":\n        advance(\"-\");\n        advance(\"(number)\");\n        break;\n\n      default:\n        error(\"E003\", state.tokens.next);\n    }\n  }\n  /**\n   * Lint dynamically-evaluated code, appending any resulting errors/warnings\n   * into the global `errors` array.\n   *\n   * @param {array} internals - collection of \"internals\" objects describing\n   *                            string tokens that contain evaluated code\n   * @param {object} options - linting options to apply\n   * @param {object} globals - globally-defined bindings for the evaluated code\n   */\n\n\n  function lintEvalCode(internals, options, globals) {\n    var priorErrorCount, idx, jdx, internal;\n\n    for (idx = 0; idx < internals.length; idx += 1) {\n      internal = internals[idx];\n      options.scope = internal.elem;\n      priorErrorCount = JSHINT.errors.length;\n      itself(internal.code, options, globals);\n\n      for (jdx = priorErrorCount; jdx < JSHINT.errors.length; jdx += 1) {\n        JSHINT.errors[jdx].line += internal.token.line - 1;\n      }\n    }\n  }\n\n  var escapeRegex = function escapeRegex(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  }; // The actual JSHINT function itself.\n\n\n  var itself = function itself(s, o, g) {\n    var x, reIgnoreStr, reIgnore;\n    var optionKeys, newOptionObj, newIgnoredObj;\n    o = _.clone(o);\n    state.reset();\n    newOptionObj = state.option;\n    newIgnoredObj = state.ignored;\n\n    if (o && o.scope) {\n      JSHINT.scope = o.scope;\n    } else {\n      JSHINT.errors = [];\n      JSHINT.internals = [];\n      JSHINT.blacklist = {};\n      JSHINT.scope = \"(main)\";\n    }\n\n    predefined = Object.create(null);\n    combine(predefined, vars.ecmaIdentifiers[3]);\n    combine(predefined, vars.reservedVars);\n    declared = Object.create(null);\n    var exported = Object.create(null); // Variables that live outside the current file\n\n    function each(obj, cb) {\n      if (!obj) return;\n      if (!Array.isArray(obj) && typeof obj === \"object\") obj = Object.keys(obj);\n      obj.forEach(cb);\n    }\n\n    if (o) {\n      each([o.predef, o.globals], function (dict) {\n        each(dict, function (item) {\n          var slice, prop;\n\n          if (item[0] === \"-\") {\n            slice = item.slice(1);\n            JSHINT.blacklist[slice] = slice; // remove from predefined if there\n\n            delete predefined[slice];\n          } else {\n            prop = Object.getOwnPropertyDescriptor(dict, item);\n            predefined[item] = prop ? prop.value : false;\n          }\n        });\n      });\n      each(o.exported || null, function (item) {\n        exported[item] = true;\n      });\n      delete o.predef;\n      delete o.exported;\n      optionKeys = Object.keys(o);\n\n      for (x = 0; x < optionKeys.length; x++) {\n        if (/^-W\\d{3}$/g.test(optionKeys[x])) {\n          newIgnoredObj[optionKeys[x].slice(1)] = true;\n        } else {\n          var optionKey = optionKeys[x];\n          newOptionObj[optionKey] = o[optionKey];\n        }\n      }\n    }\n\n    state.option = newOptionObj;\n    state.ignored = newIgnoredObj;\n    state.option.indent = state.option.indent || 4;\n    state.option.maxerr = state.option.maxerr || 50;\n    indent = 1;\n    var scopeManagerInst = scopeManager(state, predefined, exported, declared);\n    scopeManagerInst.on(\"warning\", function (ev) {\n      warning.apply(null, [ev.code, ev.token].concat(ev.data));\n    });\n    scopeManagerInst.on(\"error\", function (ev) {\n      /* istanbul ignore next */\n      error.apply(null, [ev.code, ev.token].concat(ev.data));\n    });\n    state.funct = functor(\"(global)\", null, {\n      \"(global)\": true,\n      \"(scope)\": scopeManagerInst,\n      \"(comparray)\": arrayComprehension(),\n      \"(metrics)\": createMetrics(state.tokens.next)\n    });\n    functions = [state.funct];\n    member = {};\n    membersOnly = null;\n    inblock = false;\n    lookahead = [];\n\n    if (!isString(s) && !Array.isArray(s)) {\n      errorAt(\"E004\", 0);\n      return false;\n    }\n\n    api = {\n      get isJSON() {\n        /* istanbul ignore next */\n        return state.jsonMode;\n      },\n\n      getOption: function getOption(name) {\n        return state.option[name] || null;\n      },\n      getCache: function getCache(name) {\n        return state.cache[name];\n      },\n      setCache: function setCache(name, value) {\n        state.cache[name] = value;\n      },\n      warn: function warn(code, data) {\n        warningAt.apply(null, [code, data.line, data.char].concat(data.data));\n      },\n      on: function on(names, listener) {\n        names.split(\" \").forEach(function (name) {\n          emitter.on(name, listener);\n        }.bind(this));\n      }\n    };\n    emitter.removeAllListeners();\n    (extraModules || []).forEach(function (func) {\n      func(api);\n    });\n    state.tokens.prev = state.tokens.curr = state.tokens.next = state.syntax[\"(begin)\"];\n\n    if (o && o.ignoreDelimiters) {\n      if (!Array.isArray(o.ignoreDelimiters)) {\n        /* istanbul ignore next */\n        o.ignoreDelimiters = [o.ignoreDelimiters];\n      }\n\n      o.ignoreDelimiters.forEach(function (delimiterPair) {\n        if (!delimiterPair.start || !delimiterPair.end) return;\n        reIgnoreStr = escapeRegex(delimiterPair.start) + \"[\\\\s\\\\S]*?\" + escapeRegex(delimiterPair.end);\n        reIgnore = new RegExp(reIgnoreStr, \"ig\");\n        s = s.replace(reIgnore, function (match) {\n          return match.replace(/./g, \" \");\n        });\n      });\n    }\n\n    lex = new Lexer(s);\n    lex.on(\"warning\", function (ev) {\n      warningAt.apply(null, [ev.code, ev.line, ev.character].concat(ev.data));\n    });\n    lex.on(\"error\", function (ev) {\n      errorAt.apply(null, [ev.code, ev.line, ev.character].concat(ev.data));\n    });\n    lex.on(\"fatal\", function (ev) {\n      quit(\"E041\", ev);\n    });\n    lex.on(\"Identifier\", function (ev) {\n      emitter.emit(\"Identifier\", ev);\n    });\n    lex.on(\"String\", function (ev) {\n      emitter.emit(\"String\", ev);\n    });\n    lex.on(\"Number\", function (ev) {\n      emitter.emit(\"Number\", ev);\n    }); // Check options\n\n    var name;\n\n    for (name in o) {\n      if (_.has(o, name)) {\n        checkOption(name, true, state.tokens.curr);\n      }\n    }\n\n    if (o) {\n      for (name in o.unstable) {\n        if (_.has(o.unstable, name)) {\n          checkOption(name, false, state.tokens.curr);\n        }\n      }\n    }\n\n    try {\n      applyOptions(); // combine the passed globals after we've assumed all our options\n\n      combine(predefined, g || {}); //reset values\n\n      checkComma.first = true;\n      advance();\n\n      switch (state.tokens.next.id) {\n        case \"{\":\n        case \"[\":\n          destructuringAssignOrJsonValue(0);\n          break;\n\n        default:\n          directives();\n\n          if (state.directive[\"use strict\"]) {\n            if (!state.allowsGlobalUsd()) {\n              warning(\"W097\", state.directive[\"use strict\"]);\n            }\n          }\n\n          statements(0);\n      }\n\n      if (state.tokens.next.id !== \"(end)\") {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    } catch (err) {\n      if (err && err.name === \"JSHintError\") {\n        var nt = state.tokens.next || {};\n        JSHINT.errors.push({\n          scope: \"(main)\",\n          raw: err.raw,\n          code: err.code,\n          reason: err.reason,\n          line: err.line || nt.line,\n          character: err.character || nt.from\n        });\n      } else {\n        /* istanbul ignore next */\n        throw err;\n      }\n    } // Loop over the listed \"internals\", and check them as well.\n\n\n    if (JSHINT.scope === \"(main)\") {\n      lintEvalCode(JSHINT.internals, o || {}, g);\n    }\n\n    return JSHINT.errors.length === 0;\n  }; // Modules.\n\n\n  itself.addModule = function (func) {\n    extraModules.push(func);\n  };\n\n  itself.addModule(style.register); // Data summary.\n\n  itself.data = function () {\n    var data = {\n      functions: [],\n      options: state.option\n    };\n    var fu, f, i, n, globals;\n\n    if (itself.errors.length) {\n      data.errors = itself.errors;\n    }\n\n    if (state.jsonMode) {\n      /* istanbul ignore next */\n      data.json = true;\n    }\n\n    var impliedGlobals = state.funct[\"(scope)\"].getImpliedGlobals();\n\n    if (impliedGlobals.length > 0) {\n      data.implieds = impliedGlobals;\n    }\n\n    globals = state.funct[\"(scope)\"].getUsedOrDefinedGlobals();\n\n    if (globals.length > 0) {\n      data.globals = globals;\n    }\n\n    for (i = 1; i < functions.length; i += 1) {\n      f = functions[i];\n      fu = {};\n      fu.name = f[\"(name)\"];\n      fu.param = f[\"(params)\"];\n      fu.line = f[\"(line)\"];\n      fu.character = f[\"(character)\"];\n      fu.last = f[\"(last)\"];\n      fu.lastcharacter = f[\"(lastcharacter)\"];\n      fu.metrics = {\n        complexity: f[\"(metrics)\"].ComplexityCount,\n        parameters: f[\"(metrics)\"].arity,\n        statements: f[\"(metrics)\"].statementCount\n      };\n      data.functions.push(fu);\n    }\n\n    var unuseds = state.funct[\"(scope)\"].getUnuseds();\n\n    if (unuseds.length > 0) {\n      data.unused = unuseds;\n    }\n\n    for (n in member) {\n      if (typeof member[n] === \"number\") {\n        data.member = member;\n        break;\n      }\n    }\n\n    return data;\n  };\n\n  itself.jshint = itself;\n  return itself;\n}(); // Make JSHINT a Node module, if possible.\n\n\nif (typeof exports === \"object\" && exports) {\n  exports.JSHINT = JSHINT;\n}"],"names":["_","events","vars","messages","Lexer","reg","state","style","options","scopeManager","prodParams","JSHINT","api","declared","functions","inblock","indent","lookahead","lex","member","membersOnly","predefined","bang","extraModules","emitter","EventEmitter","checkOption","name","isStable","t","type","validNames","unstableNames","trim","test","indexOf","has","removed","error","isIdentifier","tkn","value","identifier","isReserved","context","token","reserved","meta","isFutureReservedWord","inES5","es5","isProperty","strictOnly","option","strict","isStrict","id","async","module","yield","supplant","str","data","replace","a","b","r","combine","dest","src","Object","keys","forEach","blacklist","applyOptions","badESOpt","enforceall","enforceopt","bool","enforcing","undefined","noenforceall","relaxopt","relaxing","processenforceall","inferEsVersion","quit","tokens","next","ecmaIdentifiers","inES6","inES8","inES11","warning","regexpu","couch","qunit","rhino","shelljs","node","typed","phantom","prototypejs","devel","dojo","browser","browserify","nonstandard","jasmine","jquery","mootools","worker","wsh","yui","mocha","code","percentage","Math","floor","line","lines","length","message","errors","desc","exception","character","from","raw","reason","removeIgnoredMessages","ignored","ignoredLines","isEmpty","reject","err","c","d","ch","l","w","msg","warnings","info","curr","evidence","scope","push","filter","e","maxerr","warningAt","m","errorAt","addEvalCode","elem","internals","lintingDirective","directiveToken","previous","body","split","map","s","predef","key","item","idx","parts","charAt","slice","funct","addExported","ch1","substr","numvals","numberVal","val","isFinite","validthis","hasParsedCode","tn","match","exec","renamed","inverted","unstable","moz","esversion","latedef","unused","shadow","quotmark","caseFallsThrough","peek","p","i","j","peekIgnoreEOL","advance","expected","relatedToken","nextToken","prev","shift","check","isSpecial","isEndOfExpr","arguments","noin","infix","rbp","sameLine","expression","left","isArray","isObject","initial","nameStack","beginsStmt","fud","useFud","nud","lbp","first","led","pop","second","startLine","nobreaknonadjacent","right","laxbreak","nolinebreak","checkComma","opts","laxcomma","property","allowTrailing","symbol","x","syntax","delim","stmt","f","blockstmt","block","reserveName","prefix","this","arity","plusplus","checkLeftSideAssign","reserve","func","FutureReservedWord","relation","apply","beginsUnaryExpression","typeofValues","isTypoTypeof","values","notypeof","es6","es3","includes","isGlobalEval","isGlobal","assignToken","allowDestructuring","freeze","nativeObject","natives","prototype","walkPrototype","obj","isPredefined","walkNative","findNativePrototype","isMetaProperty","reassign","set","destructAssign","bindingtype","assignop","that","exps","assign","bitwise","bitwiseassignop","suffix","optionalidentifier","isName","preserve","spreadrest","operation","checkPunctuator","reachable","controlToken","inBracelessBlock","reach","parseFinalSemicolon","isUnclosed","isSameLine","blockEnd","asi","lastsemic","statement","hasOwnScope","res","stack","addLabel","labelled","unstack","stmtMissingStrict","expr","nonew","statements","directives","current","directive","inES7","undef","ordinary","isfunc","isfatarrow","iscase","old_indent","metrics","nestedBlockDepth","verifyMaxNestedBlockDepthPerFunction","statementCount","validateParams","curly","supportsFnDecl","declaration","toUpperCase","inMoz","noreturnawait","noempty","countMember","legacy","concat","v","isLoneArrowParam","use","baseTemplateSyntax","template","extend","doTemplateLiteral","noSubst","tail","superNud","call","nocomma","increaseComplexityCount","paren","eqnull","eqeqeq","tag","scripturl","javascriptURL","forgiveUndef","mp","metaProperty","inFunction","opening","evil","newcap","supernew","classDeclaration","className","classNameToken","inClassBody","addbinding","initialized","initialize","classBody","classToken","accessorType","isStatic","inGenerator","hasConstructor","props","create","preAsync","inES9","saveProperty","propertyName","doMethod","infer","computedPropertyName","saveAccessor","checkProperties","generator","doFunction","isMethod","peekThroughParens","parens","pn1","pn","toString","functor","overwrites","createMetrics","leftOrRbp","ctx","depth","end","complete","classExprBinding","isGenerator","isArrow","ignoreLoopFunc","oldOption","oldIgnored","isAsync","tryClause","internallyAccessibleName","add","paramsInfo","ident","paramsIds","pastDefault","pastRest","loneArg","hasDestructuring","addParam","params","isSimple","parsedOpening","currentParams","destructuringPattern","checkPunctuators","addParamArgs","functionparams","verifyMaxParametersPerFunction","noyield","verifyMaxStatementsPerFunction","verifyMaxComplexityPerFunction","loopfunc","join","functionStartToken","ComplexityCount","maxstatements","isNumber","maxparams","maxdepth","max","maxcomplexity","cc","checkCondAssignment","boss","setterToken","getterToken","static","isAssignment","assignment","destructuringPatternRecursive","ids","identifiers","openingParsed","recursiveOptions","firstToken","nextInnerDE","assignTarget","assignmentProperty","isRest","element_after_rest","destructuringPatternMatch","zip","Array","blockVariableStatement","lone","letblock","isLet","isConst","isMozillaLet","names","hasOwnProperty","hasInitializer","hasComma","noarg","immed","n","ret","triggerFnExpr","last","preceeding","isNecessary","singleGroups","application","sub","blocktype","lookupBlockType","isCompArray","esnext","reversed","setState","comprehensiveArrayExpression","isDestAssign","elision","trailingcomma","nextVal","isGeneratorMethod","isAsyncMethod","inObjectBody","conststatement","asyncSymbol","yieldSymbol","letstatement","varstmt","impliedClosure","futurehostile","inexport","export","labelType","enablesStrictMode","forinifcheck","forin","forinifcheckneeded","forinifchecks","hasParameter","catchParameter","each","inES10","withstmt","g","noindent","seenCase","leanswitch","debug","nextop","comma","initializer","bindingPower","targets","target","decl","letscope","foreachtok","afterNext","headContext","hasLabel","isFunc","mozYield","delegatingYield","importSymbol","importName","supportsSuper","moduleSpecifier","ok","setExported","def","exportType","exportedTokens","local","binding","bracketStack","notJson","isClass","isComputed","basic","basictkn","flagName","destructuringAssignOrJsonValue","jsonMode","jsonValue","arrayComprehension","_current","CompArray","mode","variables","_carrays","elt","raw_text","splice","declare","o","proto","iterator","jsonObject","jsonArray","lintEvalCode","globals","priorErrorCount","jdx","internal","itself","escapeRegex","reIgnoreStr","reIgnore","optionKeys","newOptionObj","newIgnoredObj","clone","reset","reservedVars","exported","cb","dict","prop","getOwnPropertyDescriptor","optionKey","scopeManagerInst","on","ev","isJSON","getOption","getCache","cache","setCache","warn","char","listener","bind","removeAllListeners","ignoreDelimiters","delimiterPair","start","RegExp","emit","allowsGlobalUsd","nt","addModule","register","fu","json","impliedGlobals","getImpliedGlobals","implieds","getUsedOrDefinedGlobals","param","lastcharacter","complexity","parameters","unuseds","getUnuseds","jshint","exports"],"sourceRoot":""}